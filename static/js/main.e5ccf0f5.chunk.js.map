{"version":3,"sources":["lib/useWindowDimensions.js","components/MainHeader.js","lib/ActionTypeString.js","components/MemoInsertButton.js","lib/UtilityLibrary.js","lib/ServiceConfig.js","lib/ConnectionLibrary.js","actions/index.js","components/TagInputList.js","lib/TagTypeNames.js","components/parts/TagText.js","components/parts/ShowInfoSet.js","components/parts/SummaryMemo.js","components/FreeTagInputModal.js","components/FormedTagPutModal.js","components/parts/AuthButtons.js","components/SideMenu.js","components/SideDrawer.js","components/FeedbackSnackBar.js","test/TestAuthAction.js","pages/TestMain.js","test/TestLoading.js","components/parts/TagChip.js","components/MemoColumn.js","lib/windowScrollControll.js","components/MemoList.js","components/CirculerLoading.js","pages/MainListPage.js","components/TagSearchList.js","pages/TaggedSearchPage.js","components/ReplyColumns.js","components/ReplyColumnList.js","pages/ReplyThreadPage.js","components/NoticeColumn.js","components/NoticeList.js","pages/NoticeListPage.js","components/FavoriteList.js","pages/FavoriteListPage.js","components/UserTagConfigList.js","pages/UserConfigListPage.js","components/UserTagAdminList.js","pages/TagAdminListPage.js","routers.js","PageBase.js","pages/SingleButtonPage.js","pages/LoginPage.js","pages/ErrorPage.js","pages/LogoutPage.js","App.js","reducers/index.js","store/index.js","reportWebVitals.js","index.js"],"names":["useWindowDimensions","getWindowDimensions","window","width","innerWidth","height","innerHeight","useState","windowDimensions","setWindowDimensions","useEffect","onResize","addEventListener","removeEventListener","mainheaderStyle","makeStyles","theme","layOut","justifyContent","centerButton","display","nav","grid","padding","marginTop","marginBottom","background","borderRadius","color","textAlign","lineHeight","textDecoration","fontWeight","boxShadow","menuButton","marginRight","spacing","title","flexGrow","MainHeader","props","classes","prevPath","setPrevpath","location","useLocation","isBack","setIsBack","path","pathname","split","history","useHistory","AppBar","position","Toolbar","IconButton","onClick","push","edge","className","openMenu","aria-label","to","exact","a","Typography","variant","gutterBottom","PUSH_SHOW_MEMO_BUTTON","CLOSE_MEMOMAKE","LOAD_NEW_MEMO","RESET_MEMO","MEMO_END","ERROR_RESET","RESULT_ERROR","CONNECT_ERROR","CRITICAL_ERROR","NO_ACTION","SHOW_REPLY","TAGGED_SEARCH","MEMO_INSERT_END","MEMO_EDIT_END_MAIN","MEMO_EDIT_END_TAG","TAGGED_SEARCH_CONTINUE","SHOW_SNACK","LOADING_START","LOADING_END","AUTH_SUCCESS","USER_CONFIG_LIST","CHANGE_USER_CONFIG","SHOW_TAG_ADMIN","MAKE_TAG_ADMIN","MODIFY_TAG_ADMIN","GET_NOTICE_LIST","FREE_MODAL_OPEN","FORMED_MODAL_OPEN","MAKE_NEWFOLLOW_MODAL","DELETE_NEWFOLLOW_MODAL","MAKE_NEW_REPLY_MODAL","DELETE_NEW_REPLY_MODAL","SHOW_FAVORITE","useStyles","root","margin","extendedIcon","fabButton","bottom","right","zIndex","Iconspace","marginLeft","MemoInsertButton","useDispatch","React","bmenu","showMenu","anchorEl","setAnchorEl","modalIcons","action","icon","fontSize","Fab","event","currentTarget","aria-haspopup","Popover","onClose","console","log","open","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Breadcrumbs","map","d","Link","href","e","preventDefault","onModalOpen","menuPushEvent","checkHasContent","obj","Object","keys","length","getDateMessage","date","dd","Date","parse","nowdd","lessd","getFullYear","parseInt","getMonth","getDate","getHours","getMinutes","Math","round","getTimeStampNow","year_str","month_str","day_str","hour_str","minute_str","second_str","getSeconds","format_str","replace","API_URL","APICallController","this","viewname","name","params","typeStr","setFunc","dispatch","msg","setParams","assign","type","instance","axios","create","baseURL","headers","localStorage","getItem","get","then","results","data","errorFlg","result","catch","error","getTaggedData","arr","fromDay","next","tagArray","String","SCENE","callAPI","res","timeline","read","fav","endflg","auth_login_success","user_list","id","changeUserConfig","tagstatus","isshow","sendParam","user_config","main_tag","main","sub_tag","sub","makeNewTagByAdmin","rank","tagId","tagname","tagrank","tagtype","change","getTime","modifyTagByAdmin","loadNewMemo","RECORD_SET","flexWrap","asummary","backgroundColor","borderColor","border","nontag","textField","TagInputList","selected","setSelected","value","setValue","useSelector","state","auth_login","all_tag","nameSearch","setNameSearch","onTagClick","nowselected","some","el","reduce","prev","current","end","makeTagList","list","m","find","strTagName","getTagInfo","keyTag","Chip","numTagType","label","clickable","Tabs","onChange","Tab","hidden","TextField","placeholder","target","resB","filter","includes","TAG_TYPES","TAG_RANKS","TagText","tagtextarray","tag_list","sd","GetUserName","prefix","suffix","us","u","strName","GetTagName","followarea","SummaryMemo","datePublish","keySender","dateRegist","strTaglist","strMainText","FreeTagInputModal","hasTime","setHasTime","registTime","setRegistTime","canSubmit","setCanSubmit","mainText","setMainText","textRef","useRef","onSubmit","text","timeS","follow","reply_source","setReplyData","join","follow_data","pushNewMemo","closeAction","Modal","aria-labelledby","aria-describedby","modal","closeAfterTransition","Fade","in","Card","inputRef","multiline","minRows","fullWidth","Button","str","disabled","alignItems","paper","palette","shadows","FormedTagPutModal","defs","setDefs","lastOne","setLastOne","textRefMain","tag_source","formatted","setview","setTagArray","searchTagArray","intersection","setA","setB","_intersection","Set","elem","has","add","nowTag","keyTagMain","nowGroup","strGroup","newTagArray","phaseNow","acc","numTagPhase","forEach","element","showFlg","hasEl","s","showArray","strShow","size","delEl","del","putSelectedInPlace","ss","la","pop","onDecide","txt","copy","sendAction","restagarray","st","pushNewFormedMemo","TagButton","secondarySet","primarySet","onDelete","inputType","defaultValue","rows","InputLabelProps","shrink","multilineText","slice","CheckSpecialTag","googleClientId","process","LoginButton","red","callback","LOGIN_URL","clientId","buttonText","onSuccess","response","post","token","accessToken","backend","grant_type","client_id","client_secret","access_token","refresh_token","setItem","err","SetAuthConnection","render","renderProps","class","onFailure","details","LogOutButton","handleLogOutAction","onLogoutSuccess","menuStyle","door","loginButtonBefore","animation","listShelf","column","borderLeft","SideMenu","userRank","onMove","menu","SideDrawer","Drawer","anchor","mobile","FeedbackSnackbar","enqueueSnackbar","useSnackbar","snacklist","notice_main","snack","autoHideDuration","TestAuthAction","TestMain","loadingRoot","opacity","top","loadingCircle","funcColor","staffColor","guestColor","placeColor","actionColor","TagChip","colorPalette","tagdata","TagChipList","listStr","memo","borderTop","ulbutton","listStyle","align","topset","toName","todatePublish","toFooter","icons","headertext","libutton","editable","focus","outline","deleted","verticalAlign","fontStyle","MemoColumn","menuOpen","setEditable","bdelete","setDelete","editText","setEditText","userId","expanded","setExpanded","isFav","setFavorite","hasRead","setRead","getNames","tg","Box","memoId","hasreadCheck","hasfavCheck","boolHasDeleted","MenuListProps","MenuItem","onEditEnd","sendTxt","getView","contentEditable","dangerouslySetInnerHTML","__html","onInput","checkEditable","innerHTML","EditableColumn","txtSource","style","whiteSpace","substring","MainText","keyFollowId","onDeleteEnd","DeleteColumn","ize","keyReplyBase","endIcon","DoubleArrowOutlined","boolHasModified","listReceiver","ScrollUpdater","checkInEnd","throttle","m1","document","documentElement","scrollTop","m2","scrollHeight","abs","scrollFunc","checkParam","listStyles","base","progress","MemoList","memo_main","changFlg","toJSON","setNewTimeLine","buffer","Grid","LinearProgress","styles","CirculerSelf","CircularProgress","CirculerLoading","isLoad","isModal","MainListPage","setView","TagSearchList","tagged_main","changeFlg","start","setStart","showEnd","setShowEnd","showProgress","setShowProgress","sendSelectedTag","day","arr_res","setNewTagList","TaggedSearchPage","memoSub","default","memoChild","memoParent","textarea","ReplyColumn","boxstyle","mark","maintext","favorite","hasStar","setHasStar","bstyle","setBoxStyle","checkText","exp","onExpanded","Collapse","collapsedHeight","wrapper","content","clear","left","ReplyColumnList","setLineHeight","wrapperHeight","useLayoutEffect","handleResize","clientHeight","ref","ReplyThreadPage","reply_main","match","load_flg","past_thread","parent_data","self_data","child_data","future_thread","mainExp","subExp","NoticeColumn","userlist","keyMemoMain","senderMsg","setSenderMsg","sender","getUserName","numNoticeType","underline","NoticeList","notices","count","NoticeListPage","FavoriteList","show_favorite","FavoriteListPage","formControl","minWidth","selectEmpty","UserTagConfigColumn","numTagStatus","status","setStatus","boolIsShownInList","isShow","setIsShow","FormControl","NativeSelect","stnow","onChangeTabSearch","inputProps","defaultChecked","FormControlLabel","control","Checkbox","checked","UserTagConfigList","uConfigList","UserConfigListPage","UserTagAdminColumn","tag_admin","tagName","setTagName","tagRank","setTagRank","tagType","setTagType","errorMsg","setErrorMsg","onColumnCancel","onCancel","numTagRank","dispatcher","modeEdit","tr","tt","onSelect","modeView","UserTagAdminList","openid","setOpenId","setAdd","changeViewList","viewtype","setViewType","setShowArray","onColumnSelect","component","RadioGroup","row","Radio","TagAdminListPage","withRouter","getPathDepth","pathArr","n","prevDepth","setPrevDepth","currentKey","TransitionGroup","CSSTransition","timeout","enter","exit","classNames","mountOnEnter","unmountOnExit","Styles","side","contentMobile","contentDesktop","article","PageBase","error_control","setMenuOpen","freetagOpen","setFreeTagOpen","formtagOpen","setformTagOpen","setFollowOpen","follow_main","onMenuClose","closeModal","isMobile","FeedbackSnackBar","loginroot","card","maxWidth","button","SingleButtonPage","Content","ButtonAction","Footer","CardActions","LoginPage","CardContent","CardMedia","image","CardAction","redi","ErrorPage","errorCode","setErrorCode","LogoutPage","App","INIT_ACTION","unit_list","isPrivate","login_id","INIT_AUTH_STATE","INIT_TAG_ADMIN_STATE","INIT_MEMO_MAIN_STATE","memomake_open","INIT_TAGGED_SEARCH","INIT_REPLY_MAIN","INIT_FOLLOW_ACTION","INIT_NOTICE","ERROR_DATA","combineReducers","endFlg","resA","concat","newtimeline","userConf","all","keyParent","store","initialState","logger","createLogger","collapsed","diff","middleware","applyMiddleware","thunk","compose","createStoreWithMiddleware","createStore","rootReducer","configureStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","maxSnack","getElementById"],"mappings":"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","file":"static/js/main.e5ccf0f5.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n \r\nexport const useWindowDimensions = () => {\r\n \r\n  const getWindowDimensions = () => {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n      width,\r\n      height\r\n    };\r\n  }\r\n \r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n    window.addEventListener('resize', onResize);\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n  return windowDimensions;\r\n}\r\n","import React,{useEffect,useState} from 'react';\r\nimport { NavLink,useLocation,useHistory } from 'react-router-dom';\r\nimport  {useWindowDimensions} from '../lib/useWindowDimensions';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\n//メモ単画像表示\r\n\r\n//現在ログインしているユーザの名前を表示する\r\n//ログインしているユーザーがいなければ施設の名前を表示する\r\n\r\n//機能メニューを表示する\r\n\r\nconst mainheaderStyle = makeStyles((theme) => ({\r\n  // root:{\r\n  //   flexGrow: 1,\r\n  //   display :\"flex\",\r\n  //   justifyContent: \"center\"\r\n  \r\n  // },\r\n  layOut:{\r\n    justifyContent: \"center\"\r\n  },\r\n    centerButton:{\r\n      display:\"flex\",\r\n      justifyContent:\"center\"\r\n\r\n    },\r\n    nav: {\r\n      display: \"grid\",\r\n      grid: \"auto / auto-flow\",\r\n      padding: \"3px\",\r\n      marginTop: \"4px\",\r\n      marginBottom: \"4px\",\r\n      background: \"#eee\",\r\n      borderRadius: \"10px\",\r\n\r\n      \"& a\" :{\r\n        display: \"block\",\r\n        color: \"#000\",\r\n        //marginRight:\"15px\",\r\n        //marginLeft:\"15px\",\r\n        padding:\" 0 20px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"32px\",\r\n        textDecoration: \"none\"\r\n      },\r\n      \"& a.active\" : {\r\n        background: \"#fff\",\r\n        fontWeight: 500,\r\n        borderRadius: \"8px\",\r\n        boxShadow: \"0 1px 4px rgba(0, 0, 0, 0.1)\"\r\n      }\r\n    \r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    \r\n  }));\r\n  \r\n\r\nconst MainHeader=(props)=>{\r\n  //console.log(\"props\"+ props);\r\n    const classes = mainheaderStyle();\r\n    const [prevPath,setPrevpath]=useState(\"\");\r\n    const location=useLocation();\r\n    const [isBack,setIsBack]=useState(false);\r\n\r\n    const openSearch=()=>{\r\n      //showSearch(!search);\r\n    };\r\n\r\n    useEffect(()=>{\r\n\r\n      const path=location.pathname.split(\"/\")[1];\r\n      if ( \"tag\" === path || \"main\" === path ){\r\n        setIsBack(false);\r\n        setPrevpath(path);\r\n      }else{\r\n        setIsBack(true);\r\n      }\r\n\r\n    },[location]);\r\n    const history=useHistory();\r\n\r\n    const { width, height } = useWindowDimensions();\r\n    //今はサイズは適当\r\n    //if (width>500){\r\n        return (\r\n            <div   >\r\n              <AppBar position=\"fixed\"  >\r\n                <Toolbar>\r\n                  {isBack ?\r\n                    <IconButton  onClick={()=>history.push(\"/\"+prevPath)} ><ArrowBackIcon/></IconButton>\r\n                    :\r\n                    width<600  &&\r\n                          <IconButton edge=\"start\" className={classes.menuButton}  onClick={()=>props.openMenu()} color=\"inherit\" aria-label=\"menu\">\r\n                             <MenuIcon  />\r\n                          </IconButton>\r\n\r\n                  }\r\n                  {!isBack &&\r\n                    <div className={classes.centerButton}>\r\n                      <span className={classes.nav}>\r\n                          <NavLink to=\"/main\" exact><div className={classes.a}><Typography variant='h6' gutterBottom >  一覧  </Typography></div></NavLink>\r\n                          <NavLink to=\"/tag\" exact><div className={classes.a}><Typography variant='h6' gutterBottom > タグ検索 </Typography></div></NavLink>\r\n                      </span>\r\n                      \r\n                      <IconButton onClick={()=>openSearch()}  ><SearchIcon/></IconButton>\r\n                    </div>\r\n\r\n                  }\r\n              \r\n                </Toolbar>\r\n              </AppBar>\r\n            </div>\r\n          );\r\n\r\n    //}\r\n\r\n}\r\n\r\nexport default MainHeader;","export const PUSH_SHOW_MEMO_BUTTON=\"PUSH_SHOW_MEMO_BUTTON\";\r\nexport const PRIVATE ='PRIVATE';\r\nexport const TEAM ='TEAM';\r\nexport const CLOSE_MEMOMAKE='CLOSE_MEMOMAKE';\r\nexport const CLOSE_PASSWORD='CLOSE_PASSWORD';\r\nexport const OPEN_PASSWORD='OPEN_PASSWORD';\r\nexport const LOAD_NEW_MEMO=\"LOAD_NEW_MEMO\";\r\nexport const RESET_MEMO=\"RESET_MEMO\";\r\nexport const MEMO_END=\"MEMO_END\";\r\nexport const ERROR_RESET=\"ERROR_RESET\";\r\nexport const RESULT_ERROR=\"RESULT_ERROR\";\r\nexport const CONNECT_ERROR=\"CONNECT_ERROR\";\r\nexport const CRITICAL_ERROR =\"CRITICAL_ERROR\";\r\n\r\nexport const NO_ACTION=\"NO_ACTION\";\r\n\r\nexport const USER_LOGIN=\"USER_LOGIN\";\r\nexport const DONE_LOGOUT=\"DONE_LOGOUT\";\r\n\r\nexport const SHOW_REPLY=\"SHOW_REPLY\";\r\nexport const TAGGED_START=\"TAGGED_START\";\r\nexport const TAGGED_SEARCH=\"TAGGED_SEARCH\";\r\nexport const MEMO_INSERT_END = \"MEMO_INSERT_END\";\r\nexport const MEMO_EDIT_END_MAIN =\"MEMO_EDIT_END_MAIN\";\r\nexport const MEMO_EDIT_END_TAG =\"MEMO_EDIT_END_TAG\";\r\n\r\nexport const TAGGED_SEARCH_CONTINUE=\"TAGGED_SEARCH_CONTINUE\";\r\nexport const RESET_TAG=\"RESET_TAG\";\r\nexport const SHOW_SNACK=\"SHOW_SNACK\";\r\nexport const LOADING_START= \"LOADING_START\";\r\nexport const LOADING_END= \"LOADING_END\";\r\n\r\n\r\nexport const PUSH_NEW_MEMO=\"PUSH_NEW_MEMO\";\r\nexport const PUSH_PASSWORD=\"PUSH_PASSWORD\";\r\nexport const DELETE_MEMO=\"DELETE_MEMO\";\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n\r\nexport const USER_CONFIG_LIST = \"USER_CONFIG_LIST\";\r\nexport const CHANGE_USER_CONFIG = \"CHANGE_USER_CONFIG\";\r\nexport const CHANGE_USER_CONFIG_SHOW = \"CHANGE_USER_CONFIG_SHOW\";\r\n\r\nexport const SHOW_TAG_ADMIN= \"SHOW_TAG_ADMIN\";\r\nexport const MAKE_TAG_ADMIN= \"MAKE_TAG_ADMIN\";\r\nexport const MODIFY_TAG_ADMIN= \"MODIFY_TAG_ADMIN\";\r\n\r\nexport const GET_MEMO_REQUEST=\"GET_MEMO_REQUEST\";\r\nexport const GET_MEMO_SUCCESS=\"GET_MEMO_SUCCESS\";\r\nexport const GET_MEMO_FAILURE=\"GET_MEMO_FAILURE\";\r\nexport const GET_NOTICE_LIST=\"GET_NOTICE_LIST\";\r\nexport const FREE_MODAL_OPEN=\"FREE_MODAL_OPEN\";\r\nexport const FORMED_MODAL_OPEN=\"FORMED_MODAL_OPEN\";\r\nexport const MAKE_NEWFOLLOW_MODAL=\"MAKE_NEWFOLLOW_MODAL\";\r\nexport const DELETE_NEWFOLLOW_MODAL=\"DELETE_NEWFOLLOW_MODAL\";\r\n\r\nexport const MAKE_NEW_REPLY_MODAL=\"MAKE_NEW_REPLY_MODAL\";\r\nexport const DELETE_NEW_REPLY_MODAL=\"DELETE_NEW_REPLY_MODAL\";\r\n\r\n\r\nexport const CHANGE_MAIN_VIEW=\"CHANGE_MAIN_VIEW\";\r\nexport const CHANGE_TAG_VIEW=\"CHANGE_TAG_VIEW\";\r\nexport const CHANGE_REPLY_VIEW=\"CHANGE_REPLY_VIEW\";\r\n\r\nexport const SHOW_FAVORITE=\"SHOW_FAVORITE\";\r\n\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport {useDispatch}  from 'react-redux';\r\nimport {Fab,Menu,MenuItem,Popover,Breadcrumbs,Link,Typography}  from '@material-ui/core';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport BorderColorSharpIcon from '@material-ui/icons/BorderColorSharp';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\n\r\n\r\n//import {pushNewMemo}  from '../actions';\r\nimport {FREE_MODAL_OPEN,FORMED_MODAL_OPEN} from '../lib/ActionTypeString';\r\nimport { EmailOutlined } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    fabButton:{\r\n        position:\"fixed\",\r\n        bottom:10,\r\n        right:10,\r\n        zIndex:100\r\n\r\n    },\r\n    Iconspace:{\r\n      marginRight:theme.spacing(2),\r\n      marginLeft:theme.spacing(2),\r\n\r\n    }\r\n\r\n\r\n  }));\r\n  \r\n\r\nconst MemoInsertButton=(props)=>{\r\n    const dispatch=useDispatch();\r\n\r\n    //どこをクリックしても消せるようにしたいのでstateはreduxに振る\r\n    const [bmenu,showMenu]=React.useState(null);\r\n    const [anchorEl,setAnchorEl]=useState(null);\r\n\r\n    const onClick=(event)=>{\r\n        showMenu(event.currentTarget);\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuPushEvent =(action,e )=>{\r\n        e.preventDefault();\r\n        setAnchorEl(null);\r\n        \r\n        showMenu(null);\r\n        props.onModalOpen(action);\r\n    };\r\n    const onClose=(event)=>{\r\n        console.log(\"close\");\r\n        showMenu(null);\r\n        setAnchorEl(null);\r\n    };\r\n   \r\n    const modalIcons=[\r\n      {action: FREE_MODAL_OPEN ,icon: <MailOutlineIcon fontSize=\"large\" />},\r\n      {action: \"dm\" ,icon: <RecordVoiceOverIcon fontSize=\"large\" />},\r\n      {action: FORMED_MODAL_OPEN ,icon: <CreateIcon fontSize=\"large\" />},\r\n    ];\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div >\r\n            <Fab \r\n            className={classes.fabButton}\r\n            onClick={onClick}\r\n            color=\"primary\" \r\n            aria-label=\"add\"\r\n            aria-haspopup=\"true\">\r\n                <AddIcon/>\r\n            \r\n                \r\n            </Fab>\r\n\r\n            <Popover\r\n                    anchorEl={anchorEl}\r\n                    \r\n                    onClose={onClose}\r\n                    \r\n                    open={Boolean(bmenu)}\r\n                    anchorOrigin={{\r\n                    vertical: 'center',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'center',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    {\r\n                      modalIcons.map((d)=>{\r\n                        return (\r\n                            <Link color=\"inherit\" href=\"/\" onClick={(e)=>menuPushEvent(d.action,e)}>\r\n                              <div className={classes.Iconspace}>{d.icon}</div>\r\n                          </Link>\r\n                        )\r\n                      })\r\n\r\n                    }\r\n\r\n                </Breadcrumbs>\r\n            </Popover>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MemoInsertButton;\r\n\r\n","//共通で使いそうな関数をまとめておく　stateとかは取らず　共通のデータ構造にのみ依存するように作っておく\r\n\r\nexport const getUserName=(user_list,id)=>{\r\n    const us=user_list.find(u=>u.id===id);\r\n    if (!us) return \"名称不定\";\r\n\r\n    return us.strName;\r\n};\r\n\r\nexport const checkHasContent=(obj)=>{\r\n    if (!obj ) return false;\r\n    return Object.keys(obj).length>0;\r\n};\r\n\r\nexport const getTagInfo=(list,id)=>{\r\n    const res=list.find(d=>d.id===id);\r\n    if(!res) return {id:-1,　strTagName:\"存在しないタグ\"};\r\n\r\n    return res;\r\n}\r\n\r\nexport const getTagNames=(tag_list,strArray)=>{\r\n    const strs=strArray.split(\",\");\r\n    return strs.map((d)=>{\r\n        const us= tag_list.find(u=>u.id===d.id);\r\n        if (!us) return \"タグ不定\";\r\n        return us.strTagName;\r\n    });    \r\n};\r\n\r\n//入力はYYYY-MM-DD HH:MM\r\nexport const getDateMessage=(date)=>{\r\n    //console.log(date);\r\n    //console.log(Date.parse(date));\r\n    const dd= new Date(Date.parse(date)) ;\r\n    const nowdd=new Date();\r\n\r\n    const lessd=nowdd-dd;\r\n\r\n    if(lessd<0){\r\n        return  \"予定 :\"+dd.getFullYear()+\"年\"+parseInt(1+dd.getMonth())+\"月\"+dd.getDate()+\"日 \"+dd.getHours()+\":\"+dd.getMinutes();\r\n  \r\n    }else if(lessd<1000*60){\r\n        return \"数秒前\";\r\n\r\n    }else if( lessd<1000*60*60 ){\r\n        return  Math.round(lessd/(1000*60)) + \"分前\"; \r\n    }else if(lessd<1000*60*60*24){\r\n       // console.log(lessd/(1000*60*60));\r\n        return  Math.round(lessd/(1000*60*60)) + \"時間前\";\r\n\r\n    }else if (lessd<1000*60*60*48 &&   nowdd.getDate()-dd.getDate()===1 ){\r\n        return  \"昨日\"+ dd.getHours() + \"時\"+ dd.getMinutes() + \"分\"; \r\n    }else if( dd.getFullYear()===nowdd.getFullYear()){\r\n        return parseInt(1+dd.getMonth())+\"月\"+dd.getDate()+\"日 \"+dd.getHours()+\":\"+dd.getMinutes();\r\n    }else{\r\n        return dd.getFullYear()+\"年\"+parseInt(1+dd.getMonth())+\"月\"+dd.getDate()+\"日 \"+dd.getHours()+\":\"+dd.getMinutes();\r\n    }\r\n};\r\n\r\nexport const getTimeStampNow=()=>{\r\n\r\n    const date = new Date();\r\n    //console.log( 'date:', date);\r\n\r\n    const year_str = date.getFullYear();\r\n    const month_str = date.getMonth()+1;\r\n    const day_str = date.getDate();\r\n    const hour_str = date.getHours();\r\n    const minute_str = date.getMinutes();\r\n    const second_str = date.getSeconds();\r\n\r\n    let format_str = 'YYYY-MM-DD hh:mm:ss';\r\n    format_str = format_str.replace(/YYYY/g, year_str);\r\n    format_str = format_str.replace(/MM/g, month_str);\r\n    format_str = format_str.replace(/DD/g, day_str);\r\n    format_str = format_str.replace(/hh/g, hour_str);\r\n    format_str = format_str.replace(/mm/g, minute_str);\r\n    format_str = format_str.replace(/ss/g, second_str);\r\n    //console.log(\"format_str\",format_str);\r\n    return format_str;\r\n}","\r\n//export const API_URL='http://127.0.0.1:8000/api/';\r\nexport const API_URL='http://itohkun55.pythonanywhere.com/api/';","import axios from 'axios';\r\nimport {CONNECT_ERROR ,RESULT_ERROR, SHOW_SNACK,LOADING_START,LOADING_END} from './ActionTypeString';\r\nimport {API_URL} from './ServiceConfig';\r\n//const URL='http://127.0.0.1:8000/api/';\r\n//APIへの接続をまとめておく\r\n\r\nclass APICallController{\r\n\r\n    constructor(){\r\n        this.viewname=\"\";\r\n    }\r\n\r\n\r\n    setView(viewname){\r\n        this.viewname=viewname;\r\n\r\n    }\r\n\r\n    getView(){\r\n        return this.viewname;\r\n    }\r\n\r\n\r\n    callAPI(name,params,typeStr,setFunc,dispatch,msg=\"\",loadFunc=null){\r\n        const setParams=Object.assign({},params);\r\n        //setParams.userId=this.userId;\r\n        //setParams.facId=this.facId;\r\n        setParams.viewname=this.viewname;\r\n        //setParams.fromId=this.fromId;\r\n        \r\n        dispatch({type:LOADING_START});\r\n\r\n        const instance = axios.create({\r\n            baseURL: API_URL,\r\n            headers: {'Authorization': 'Bearer '+ localStorage.getItem('access_token')}\r\n\r\n          });\r\n\r\n        instance.get(name,{params:setParams})\r\n        .then(results=>{\r\n            console.log(\"results.data\",results.data);\r\n    \r\n            \r\n            if(results.data.errorFlg ){\r\n                dispatch({type:RESULT_ERROR,result:results.data});    \r\n                return;\r\n            }\r\n\r\n            const result=setFunc(results.data);\r\n            //console.log(typeStr,results,result);\r\n\r\n        \r\n            if (msg!==\"\") {\r\n                console.log(\"msg\",msg);\r\n                dispatch({type:SHOW_SNACK,msg:msg});\r\n            }    \r\n            dispatch({type:typeStr,result:result});\r\n            dispatch({type:LOADING_END});\r\n\r\n        }).catch(error=>{\r\n            \r\n            console.log(\"CONNECT_ERROR\");\r\n            console.log(error);\r\n            //　後で　エラーをまとめてイベント表示する\r\n            dispatch({type:CONNECT_ERROR,error});\r\n            dispatch({type:LOADING_END});\r\n    \r\n        });\r\n    }\r\n}\r\n\r\nexport default new APICallController();\r\n","import {\r\n    SHOW_REPLY,\r\n    CLOSE_MEMOMAKE,\r\n    LOAD_NEW_MEMO,\r\n    RESET_MEMO,\r\n    USER_LOGIN,\r\n    AUTH_SUCCESS,\r\n    RESET_TAG,\r\n    TAGGED_SEARCH,\r\n    TAGGED_SEARCH_CONTINUE,\r\n    GET_NOTICE_LIST,\r\n    SHOW_FAVORITE,\r\n    USER_CONFIG_LIST,\r\n    CHANGE_USER_CONFIG,\r\n    MEMO_INSERT_END,\r\n    MEMO_EDIT_END_MAIN,\r\n    MEMO_EDIT_END_TAG,\r\n    NO_ACTION,\r\n    MAKE_TAG_ADMIN,\r\n    SHOW_TAG_ADMIN,\r\n    MODIFY_TAG_ADMIN\r\n}  from '../lib/ActionTypeString';\r\n\r\nimport {TestReplyData} from '../lib/TestReplyThreadData';\r\nimport {TestTagListData,FormedTagInputData} from  '../lib/TestTagListData';\r\nimport {getTimeStampNow} from '../lib/UtilityLibrary';\r\n\r\nimport axios from 'axios';\r\nimport  APICallController from '../lib/ConnectionLibrary';\r\n\r\n\r\n\r\n\r\nexport const getTaggedData=(arr,fromDay,next=false)=>dispatch=>{\r\n    let tagArray=\"-1\";\r\n    if (arr.length>0){\r\n        tagArray= String(arr);\r\n    }\r\n\r\n\r\n    const resFunc=(res)=>{\r\n        return { timeline:res.timeline,read:res.read,fav:res.fav,endflg:res.endflg };\r\n    };\r\n\r\n    let SCENE=TAGGED_SEARCH;\r\n    if (next){\r\n        SCENE=TAGGED_SEARCH_CONTINUE;\r\n    } \r\n\r\n    APICallController.callAPI(\"tags\",{tagArray:tagArray,fromDay:fromDay},SCENE,resFunc,dispatch);\r\n\r\n};\r\n\r\nexport const setReplyData=(tagArray,mainText,dateRegist,data)=>dispatch=>{\r\n\r\n    const sendParam={ \r\n        \"memoId\":data.id,\r\n        'tagArray':tagArray,\r\n        'mainText':mainText,\r\n        'datePublish':getTimeStampNow(),\r\n        'dateRegist':dateRegist\r\n    };\r\n\r\n    const resFunc=(res)=>{\r\n        return {res:res,id:data.id};\r\n    };\r\n\r\n    APICallController.callAPI(\"repinsert\",sendParam,SHOW_REPLY,resFunc,dispatch);\r\n};\r\n\r\n\r\nexport const getReplyData=(id)=>dispatch=>{\r\n\r\n    const resFunc=(res)=>{\r\n        return { timeline:res.timeline,read:res.read,fav:res.fav,endflg:res.endflg,id:id };\r\n    };\r\n    APICallController.callAPI(\"reply\",{memoId:id},SHOW_REPLY,resFunc,dispatch);\r\n    //dispatch({type:SHOW_REPLY, self_data,past_thread,parent_data,child_data,future_thread });\r\n};\r\n\r\n\r\n\r\n\r\n//最初の認証終了時(想定）のアクション\r\n//本来は色々引数があるはず\r\n\r\nexport const auth_login_success=props=>dispatch=>{\r\n\r\n    const resFunc=(res)=>{\r\n        const user_list=res.user_list;\r\n        user_list.push({name:\"未設定\",id:-1});\r\n\r\n        return { res:res};\r\n    };\r\n    \r\n    APICallController.callAPI(\"inituser\",{},AUTH_SUCCESS,resFunc,dispatch);\r\n\r\n\r\n};\r\n\r\n\r\n//\r\nexport const login_start=(login_id,password)=>dispatch=>{\r\n    //実際はサーバーとの認証処理を行い再度データを取り出す\r\n\r\n    dispatch({type:USER_LOGIN,login_id,password});\r\n};\r\n\r\n\r\n//メモを新規追加して送信し、その結果を戻す\r\nexport const pushNewMemo=(tagArray,mainText,dateRegist,follow=-1)=>dispatch=>{\r\n\r\n    const resFunc=(res)=>{\r\n        const now=new Date().getTime();\r\n        return { change:now};\r\n    };\r\n\r\n    const sendParam={ 'settags':tagArray,'mainText':mainText,'datePublish':getTimeStampNow(),'dateRegist':dateRegist,'followId':follow };\r\n    APICallController.callAPI(\"memoinsert\",sendParam,MEMO_INSERT_END,resFunc,dispatch,\"書き込み完了しました。\");    \r\n\r\n};\r\n\r\n//メモを新規追加して送信し、その結果を戻す\r\nexport const editMemo=(id, mainText)=>dispatch=>{\r\n\r\n    const resFunc=(res)=>{ return res;};\r\n\r\n    let SCENE=MEMO_EDIT_END_MAIN;\r\n    if (APICallController.getView()==\"tag\"){\r\n        SCENE=MEMO_EDIT_END_TAG;\r\n    } \r\n    const sendParam={ 'memoId':id,'mainText':mainText };\r\n    APICallController.callAPI(\"memomodify\",sendParam,SCENE,resFunc,dispatch,\"修正完了しました。\");    \r\n};\r\n\r\nexport const deleteMemo=(id)=>dispatch=>{\r\n    \r\n    const resFunc=(res)=>{\r\n        const now=new Date().getTime();\r\n        return { change:now};\r\n    };\r\n    const sendParam={ 'memoId':id };\r\n    //通信後の挙動は挿入と全く同じなので、MEMO_INSERT_ENDを入れておく\r\n    APICallController.callAPI(\"memodelete\",sendParam,MEMO_INSERT_END,resFunc,dispatch,\"削除完了しました。\"); \r\n};\r\n\r\n\r\nexport const loadUserConfig=()=>dispatch=>{\r\n    const resFunc=(res)=>{\r\n        return {user_config:res};\r\n    };\r\n    APICallController.callAPI(\"tagconfig\",{},USER_CONFIG_LIST,resFunc,dispatch);    \r\n\r\n};\r\n\r\nexport const resetUserConfig=()=>dispatch=>{\r\n    const resFunc=(res)=>{\r\n        return {user_config:res};\r\n    };\r\n    APICallController.callAPI(\"tagreset\",{},USER_CONFIG_LIST,resFunc,dispatch,\"タグがすべてリセットされました。\");    \r\n\r\n};\r\n\r\nexport const changeUserConfig=(id,tagstatus,isshow)=>dispatch=>{\r\n    const resFunc=(res)=>{\r\n        return {user_config:res.user_config,main_tag:res.main,sub_tag:res.sub};\r\n    };\r\n    const sendParam={\"tagId\":id,\"tagstatus\":tagstatus,\"isshow\":isshow};\r\n    APICallController.callAPI(\"changeconfig\",sendParam,CHANGE_USER_CONFIG,resFunc,dispatch,\"タグ設定を更新しました。\");\r\n};\r\n\r\n\r\nexport const showTagAdmin=()=>dispatch=>{\r\n    const resFunc=(res)=>{\r\n        return {tag_list:res.tag_list};\r\n    };\r\n    const sendParam={};\r\n    APICallController.callAPI(\"showtagadmin\",sendParam,SHOW_TAG_ADMIN,resFunc,dispatch);\r\n};\r\n\r\nexport const makeNewTagByAdmin=(id,name,rank,type)=>dispatch=>{\r\n    const resFunc=(res)=>{\r\n        const now=new Date().getTime();\r\n        return { change:now};\r\n    };\r\n    \r\n    const sendParam={tagId:id,tagname:name,tagrank:rank,tagtype:type};\r\n    APICallController.callAPI(\"maketagadmin\",sendParam,MAKE_TAG_ADMIN,resFunc,dispatch,\"タグ追加完了しました。\");\r\n};\r\n\r\n\r\nexport const modifyTagByAdmin=(id,name,rank,type)=>dispatch=>{\r\n    const resFunc=(res)=>{\r\n        const now=new Date().getTime();\r\n        return { change:now};\r\n    };\r\n    const sendParam={tagId:id,tagname:name,tagrank:rank,tagtype:type};\r\n\r\n    console.log(\"sendParams:\", sendParam);\r\n    APICallController.callAPI(\"modifytagadmin\",sendParam,MODIFY_TAG_ADMIN,resFunc,dispatch,\"タグ修正完了しました。\");\r\n};\r\n\r\n//メモを新規追加して送信し、その結果を戻す\r\nexport const pushNewFormedMemo=(tagArray,mainText)=>dispatch=>{\r\n\r\n    const resFunc=(res)=>{\r\n        const now=new Date().getTime();\r\n        return { change:now };\r\n    };\r\n    \r\n    const sendParam={ 'settags':tagArray,'mainText':mainText,'datePublish':getTimeStampNow(),'dateRegist':getTimeStampNow() };\r\n    APICallController.callAPI(\"formattedinsert\",sendParam,MEMO_INSERT_END,resFunc,dispatch,\"登録完了しました。\");    \r\n\r\n};\r\n\r\n\r\nexport const getNoticeData=()=>dispatch=>{\r\n\r\n    const resFunc=(res)=>{\r\n        return {notices:res.notices,count:res.count};\r\n    };\r\n\r\n    APICallController.callAPI(\"getnotice\",{},GET_NOTICE_LIST,resFunc,dispatch);\r\n};\r\n\r\n\r\n//現在まで表示したデータの次のメモデータを取得して表示する\r\nexport const loadNewMemo=fromDay=>dispatch=>{\r\n\r\n    const resFunc=(res)=>{\r\n        return { timeline:res.timeline,read:res.read,fav:res.fav,endflg:res.endflg };\r\n    };\r\n    let RECORD_SET=LOAD_NEW_MEMO;\r\n\r\n    if (fromDay==-1) RECORD_SET=RESET_MEMO;\r\n\r\n    APICallController.callAPI(\"main\",{fromDay:fromDay},RECORD_SET,resFunc,dispatch);    \r\n};\r\n\r\nexport const hasreadCheck=(memoId,read)=>dispatch=>{\r\n    // const resFunc=(res)=>{\r\n    //     return { timeline:[],read:[],fav:[] };\r\n    // };\r\n    \r\n    const resFunc=(res)=>{\r\n        return { change:0 };\r\n    };\r\n    APICallController.callAPI(\"setread\",{memoId:memoId,read:read},NO_ACTION,resFunc,dispatch,\"既読チェック完了\");\r\n};\r\n\r\nexport const hasfavCheck=(memoId,fav)=>dispatch=>{\r\n    // const resFunc=(res)=>{\r\n    //     return { timeline:[],read:[],fav:[] };\r\n\r\n    // };\r\n    const resFunc=(res)=>{\r\n        return { change:0 };\r\n    };\r\n    APICallController.callAPI(\"setfav\",{memoId:memoId,fav:fav},NO_ACTION,resFunc,dispatch,\"お気に入り登録完了\");\r\n};\r\n\r\nexport const showFavorite=()=>dispatch =>{\r\n\r\n    const resFunc=(res)=>{\r\n        return { timeline:res.timeline,read:res.read,fav:res.fav,endflg:res.end };\r\n    };\r\n\r\n    APICallController.callAPI(\"favorite\",{memoId:1,fav:2},SHOW_FAVORITE,resFunc,dispatch);\r\n};\r\n\r\nexport const closeModal=props=>dispatch=>{\r\n    dispatch({type:CLOSE_MEMOMAKE});\r\n};\r\n","import {useState,useEffect} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {\r\n    Chip,\r\n    Tab,\r\n    Tabs,\r\n    TextField\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getTagInfo } from '../lib/UtilityLibrary';\r\n\r\n\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    asummary:{\r\n        borderRadius:5,\r\n        backgroundColor:\"lightblue\",\r\n        borderColor:\"gray\",\r\n        border:\"2px\"\r\n\r\n    },\r\n    nontag:{\r\n        color:\"#ccc\",\r\n        fontSize:\"12pt\"\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n    \r\n\r\n}));\r\n\r\n\r\nconst TagInputList=(props)=>{\r\n    \r\n\r\n    const classes=useStyles();\r\n    const [selected,setSelected]=useState([]);\r\n    const [value,setValue]=useState(0);\r\n    const main_tag=useSelector(state=>state.auth_login.main_tag);\r\n    const sub_tag=useSelector(state=>state.auth_login.sub_tag);\r\n    const all_tag=useSelector(state=>state.auth_login.all_tag);\r\n\r\n    const [nameSearch,setNameSearch]=useState([]);\r\n\r\n    const handleChange = (event, value) => {\r\n        setValue(value);\r\n    };\r\n\r\n\r\n    const onTagClick=(data)=>{\r\n        let nowselected=[];\r\n\r\n        if (selected.some((el)=>el===data)){\r\n            nowselected=selected.reduce((prev,current)=>{\r\n                if( current !== data) prev.push(current);\r\n                return prev;\r\n             },[]);\r\n        }else{\r\n            //中身をソートする\r\n            nowselected=[...selected,data];\r\n        }\r\n        setSelected(nowselected);\r\n        console.log(nowselected);\r\n        //dispatch(getTaggedData(nowselected,0));\r\n        props.setSelected(nowselected);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (props.end){\r\n            setSelected([]);\r\n        }\r\n        \r\n    }, [props.end]);\r\n\r\n    \r\n    const TagSearchSet=()=>{\r\n        const onChange=(e)=>{\r\n            const str=e.target.value;\r\n            if (str==\"\") {\r\n                setNameSearch([]);\r\n                return; \r\n            }    \r\n            const resB=all_tag.filter(data=>data.strTagName.includes(e.target.value));\r\n            setNameSearch(resB);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <TextField \r\n                    label=\"検索ワード\"\r\n                    placeholder=\"探すタグの一部を入力\"\r\n                    onChange={onChange}  \r\n                    variant=\"outlined\" />\r\n                <div>\r\n                {            \r\n                    nameSearch.map((d)=>{\r\n\r\n                        return (\r\n                            <Chip\r\n                                key={d.id}    \r\n                                variant={selected.some((el)=>el===d) ? 'outlined': 'default' }\r\n                                color={d.numTagType=== 1 ? \"secondary\" : d.numTagType=== 2 ? \"primary\" : \"default\" }\r\n                                label={d.strTagName}\r\n                                clickable\r\n                                onClick={(e)=>onTagClick(d)}\r\n                            />\r\n                        );\r\n                    })\r\n\r\n                }\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n\r\n    const makeTagList=(list)=>{\r\n    \r\n        return  list.map((m)=>{\r\n            \r\n            const d=getTagInfo(all_tag,m.keyTag);\r\n\r\n            return (\r\n                <Chip\r\n                    key={d.id}    \r\n                    variant={selected.some((el)=>el===d) ? 'outlined': 'default' }\r\n                    color={d.numTagType=== 1 ? \"secondary\" : d.numTagType=== 2 ? \"primary\" : \"default\" }\r\n                    label={d.strTagName}\r\n                    clickable\r\n                    onClick={(e)=>onTagClick(d)}\r\n                />\r\n            );\r\n        });\r\n    };\r\n\r\n    const tagNameSearchInit=()=>{\r\n        setNameSearch([]);\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <div>\r\n            <Tabs value={value} onChange={handleChange} >\r\n                <Tab label=\"メインタグ\"  />\r\n                <Tab label=\"サブタグ\"  />\r\n                <Tab label=\"タグ検索\"  onClick={tagNameSearchInit} />\r\n                <Tab label=\"タグ非表示\"  />\r\n\r\n            </Tabs>\r\n        </div>\r\n        <div hidden={value !== 0 }  className={classes.root}> { value === 0 && makeTagList(main_tag) }</div>\r\n        <div hidden={value !== 1 }  className={classes.root}> { value === 1 &&  makeTagList(sub_tag) }</div>\r\n        <div hidden={value !== 2 }  className={classes.root}> { value === 2 &&  TagSearchSet() }</div>\r\n        \r\n        <hr/>\r\n            <span>検索タグ:  </span>\r\n            {selected.length>0 ?\r\n                selected.map((d)=>{\r\n                    return (\r\n                        <Chip \r\n                        \r\n                            key={d.id}  \r\n                            variant='default' \r\n                            color={d.numTagType=== 1 ? \"secondary\" : d.numTagType=== 2 ? \"primary\" : \"default\" }\r\n                            label={d.strTagName}\r\n                            onClick={(e)=>onTagClick(d)}\r\n                        />\r\n                    )\r\n                })\r\n            :\r\n            <span className={classes.nontag}>タグを1個以上選択してください</span>\r\n            }\r\n            \r\n        <hr/>\r\n        </div>      \r\n    )\r\n        \r\n};\r\n\r\nexport default TagInputList;","\r\nexport const TAG_IMPORTANT=1;\r\nexport const TAG_NORMAL=2;\r\nexport const TAG_DEFAULT=3;\r\n\r\nexport const TAG_NUMBER_INPUT=11;\r\nexport const TAG_DATE_INPUT=12;\r\nexport const TAG_TIME_INPUT=14;\r\nexport const TAG_DATE_TIME_INPUT=15;\r\nexport const TAG_TEXT_INPUT=13;\r\nexport const TAG_MULTILINE_INPUT=16;\r\n\r\nexport const TYPE_TAG_FUNCTION=1;\r\nexport const TYPE_TAG_MEMBER=2;\r\nexport const TYPE_TAG_GUEST=3;\r\nexport const TYPE_TAG_ACTION=4;\r\nexport const TYPE_TAG_OTHER_ELSE=5;\r\nexport const TYPE_TAG_PLACE=6;\r\n\r\n\r\nexport const TAG_TYPES=[\r\n    {id:TYPE_TAG_GUEST,name:\"利用者\"},\r\n    {id:TYPE_TAG_ACTION,name:\"業務用語\"},\r\n    {id:TYPE_TAG_PLACE,name:\"部署・場所\"},\r\n    {id:TYPE_TAG_OTHER_ELSE,name:\"施設内用語\"}\r\n    \r\n];\r\n\r\nexport const TAG_RANKS=[\r\n    {id:1000,name:\"最重要\"},\r\n    {id:100,name:\"重要\"},\r\n    {id:10,name:\"通常\"},\r\n    {id:1,name:\"表示のみ\"},\r\n]","import { TAG_TEXT_INPUT } from \"../../lib/TagTypeNames\";\r\n\r\nimport React  from 'react';\r\nimport {useSelector } from 'react-redux';\r\n\r\nconst TagText=({tagtextarray})=>{\r\n    const tag_list= useSelector(state=>state.auth_login.all_tag,[]);\r\n\r\n    let ss=\"\";\r\n\r\n    return tagtextarray.split(\",\").map((d)=>{\r\n\r\n        if (d.includes(\":\")){\r\n            const sd=d.split(\":\");\r\n            const tagname=tag_list.find(el=> el.id==sd[0]);\r\n            if( !tagname ) return  (<span> タグ不明 {d} :</span>)\r\n            \r\n            return tagname.strTagName+\":\"+sd[1];\r\n        }\r\n\r\n        const tagname=tag_list.find(el=> el.id==d );\r\n        //console.log(tagname);\r\n        if( !tagname ) return  <span> タグ不明 {d} :</span>\r\n\r\n        return  <span>{tagname.strTagName} :</span> \r\n    });\r\n};\r\n\r\nexport default  TagText;","//共通で使いそうな関数をまとめておく　stateとかは取らず　共通のデータ構造にのみ依存するように作っておく\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport const GetUserName=({id , prefix=\"\", suffix=\"\"})=>{\r\n    const user_list=useSelector(state=>state.auth_login.user_list);\r\n\r\n    const us=user_list.find(u=>u.id===id);\r\n    if (!us) return ( <span>名称未設定</span> );\r\n\r\n    return ( <span>{prefix}{us.strName} {suffix} </span> );\r\n};\r\n\r\nexport const GetTagName=({id})=>{\r\n\r\n    const tag_list= useSelector(state=>state.auth_login.all_tag,[]);\r\n    const tagname=tag_list.find(el=> el.id==id );\r\n    //console.log(tagname);\r\n    if( !tagname ) return  <span> タグ不明 {id} :</span>\r\n\r\n    return  <span>{tagname.strTagName} :</span> \r\n\r\n}\r\n\r\n","\r\nimport  {getDateMessage,getUserName} from  '../../lib/UtilityLibrary';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TagText  from './TagText'; \r\nimport {GetUserName}  from './ShowInfoSet';\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n      followarea:{\r\n          marginLeft:\"20%\",\r\n          border:'2px solid #888',\r\n          width:\"80%\",\r\n          fontSize:\"12px\"\r\n      }\r\n\r\n}));\r\n\r\n\r\nconst SummaryMemo=(props)=>{\r\n    const classes=useStyles();\r\n\r\n    return (\r\n    \r\n        <div className={classes.followarea}>\r\n            <div><span > { getDateMessage(props.data.datePublish) }</span> <GetUserName  suffix={\"より\"}  id={props.data.keySender}/></div>\r\n            < div><span>{getDateMessage(props.data.dateRegist) }</span><span> <TagText tagtextarray={props.data.strTaglist}/> </span> <span>{props.data.strMainText}</span></div>\r\n        </div>\r\n        \r\n    )\r\n\r\n};\r\n\r\nexport default SummaryMemo;","import react,{useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {Modal,\r\n    TextField,\r\n    Button,\r\n    Card,\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Fade } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {pushNewMemo,setReplyData} from '../actions';\r\nimport {getTimeStampNow,checkHasContent} from '../lib/UtilityLibrary';\r\nimport TagInputList from './TagInputList';\r\nimport SummaryMemo from './parts/SummaryMemo';\r\nimport { DELETE_NEWFOLLOW_MODAL,DELETE_NEW_REPLY_MODAL } from '../lib/ActionTypeString';\r\n\r\n\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    asummary:{\r\n        borderRadius:5,\r\n        backgroundColor:\"lightblue\",\r\n        borderColor:\"gray\",\r\n        border:\"2px\"\r\n\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n    \r\n\r\n}));\r\n\r\n\r\nconst FreeTagInputModal=(props)=>{\r\n    \r\n\r\n    const classes=useStyles();\r\n    const [selected,setSelected]=useState([]);\r\n    const [end,setEnd]=useState(false);\r\n    \r\n    const dispatch = useDispatch();\r\n    const[hasTime,setHasTime ]=useState(false);\r\n    const [registTime,setRegistTime]=useState(\"\");\r\n    const [canSubmit,setCanSubmit]=useState(false);\r\n    const [mainText,setMainText]=useState(\"\");\r\n    const textRef=useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if ( selected.length==0||mainText.length==0 || (hasTime && registTime==\"\") ){\r\n            setCanSubmit(false);\r\n        }else{\r\n            setCanSubmit(true);\r\n        }\r\n    });\r\n\r\n    const inputCheck=(text)=>{\r\n        setMainText(text);\r\n    };\r\n\r\n    const onSubmit=(text)=>{\r\n        const tagArray= selected.map((d)=>d.id);\r\n        let timeS=getTimeStampNow();\r\n        if (hasTime) timeS=registTime;\r\n        console.log(timeS,hasTime);\r\n        let follow=-1;\r\n        if(checkHasContent(props.reply_source)){\r\n\r\n            dispatch(setReplyData(tagArray.join(','),text,timeS,props.reply_source ));\r\n        }else{\r\n            if (checkHasContent(props.follow_data)) follow=props.follow_data.id;\r\n\r\n            dispatch(pushNewMemo(tagArray.join(','),text,timeS,follow ));    \r\n        }\r\n\r\n        //画面けし処理も追加する\r\n        closeAction();\r\n\r\n    };\r\n\r\n    const onClose=()=>{\r\n        closeAction();\r\n    };\r\n\r\n    const setRegistTimeManual=(str)=>{\r\n        console.log(\"time change\"+str);\r\n        setRegistTime(str);\r\n    }\r\n\r\n    const closeAction=()=>{\r\n        setSelected([]);\r\n        setRegistTime(\"\");\r\n        setHasTime(false);\r\n        setCanSubmit(false);\r\n        setMainText(\"\");\r\n        props.onClose();\r\n\r\n        if(checkHasContent( props.follow_data )) dispatch({type:DELETE_NEWFOLLOW_MODAL});\r\n        if(checkHasContent(props.reply_source)) dispatch({type:DELETE_NEW_REPLY_MODAL});\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n        \r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={props.open }\r\n            className={classes.modal}\r\n            onClose={()=>onClose()}\r\n            closeAfterTransition\r\n        >\r\n        <Fade in={props.open}>\r\n            \r\n            <Card className={classes.root}>\r\n                { checkHasContent( props.reply_source ) && \r\n                    <div>\r\n                        <SummaryMemo data={props.reply_source}/>\r\n                        <div>下矢印</div>\r\n\r\n                    </div>\r\n                }\r\n                \r\n\r\n                <TagInputList setSelected={setSelected} end={end} />\r\n                { checkHasContent( props.follow_data ) && \r\n                    <div>\r\n                    <div>転送</div>\r\n                    <SummaryMemo data={props.follow_data}/>\r\n                    </div>\r\n                }\r\n                \r\n                <TextField\r\n                    id=\"filled-textarea\"\r\n                    label=\"入力内容\"\r\n                    inputRef={textRef}\r\n                    placeholder=\"タグは1種類以上選択しましょう\"\r\n                    multiline\r\n                    minRows={3}\r\n                    fullWidth\r\n                    onChange={(e)=>inputCheck(e.target.value)}\r\n                />\r\n                <div>\r\n                    <span>\r\n                        <Button color=\"primary\" variant=\"outlined\" onClick={()=>setHasTime(!hasTime)} > \r\n                            {!hasTime ? <span>時刻を入れる</span>  :  <span>時刻は外す</span> }  \r\n                        </Button>\r\n                    </span>\r\n                    {hasTime &&\r\n                        <span> <TextField  className={classes.textField} type=\"datetime-local\" onChange={(e)=> setRegistTimeManual(e.target.value) } /> </span>\r\n\r\n                    }\r\n                    {canSubmit ?\r\n                        <span><Button color=\"primary\" variant=\"contained\" onClick={()=>onSubmit(textRef.current.value)} >投稿</Button> </span>\r\n                        :\r\n                        <span><Button color=\"primary\" variant=\"contained\" disabled  >投稿</Button> </span>\r\n\r\n                    }\r\n                    \r\n                </div>\r\n            </Card>\r\n        </Fade>\r\n        </Modal>\r\n\r\n    )\r\n        \r\n\r\n\r\n\r\n};\r\n\r\nexport default FreeTagInputModal;","import react,{useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {Button, Card,TextField, Typography} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {pushNewFormedMemo} from '../actions';\r\n\r\nimport {TAG_DATE_INPUT,\r\n        TAG_NUMBER_INPUT, \r\n        TAG_TEXT_INPUT,\r\n        TAG_TIME_INPUT,\r\n        TAG_MULTILINE_INPUT\r\n    } from  '../lib/TagTypeNames';\r\n\r\nconst useStyles=makeStyles((theme)=>({\r\n\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'left-end',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n      },\r\n      textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n      \r\n    modal:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      \r\n    },\r\n\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '80%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        borderRadius:\"10px\",\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n\r\n}));\r\n\r\n\r\n\r\nconst FormedTagPutModal=(props)=>{\r\n\r\n    const classes=useStyles();\r\n    //今まで設定したタグ\r\n\r\n    //現在選択中のタグ\r\n    const [selected,setSelected]=useState([]);\r\n    //最後以外の選択中のタグ\r\n    const [defs,setDefs]=useState([]);\r\n    //最後のタグ\r\n    const [lastOne,setLastOne]= useState({});\r\n\r\n    const textRef=useRef(null);\r\n    const textRefMain=useRef(null);\r\n    \r\n\r\n    const [open,setOpen] =useState(false);\r\n\r\n\r\n    const tag_source=useSelector(state=>state.auth_login.formatted);\r\n\r\n    const view_name=useSelector(state=>state.setview);\r\n\r\n    //const tag_source=props.data;\r\n    //選択候補のタグ\r\n    const [tagArray,setTagArray]=useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    // useEffect(()=>{\r\n    //     console.log(\"タグ獲得開始\");\r\n    //     dispatch(tag_start());\r\n    // },[]);\r\n\r\n    \r\n    useEffect(()=>{\r\n    //    setOpen(props.open);\r\n        //console.log(\"タグ整理開始\",tag_source);\r\n        searchTagArray();\r\n    },[selected,tag_source]);\r\n\r\n    \r\n    //モダルを閉じるとき　全てのリストを整理してから自分を閉じる\r\n    const onClose=()=>{\r\n        setSelected([]);\r\n        setDefs([]);\r\n        setLastOne({});\r\n        setOpen(false);\r\n        props.onClose();\r\n    };\r\n\r\n\r\n    //Setを利用した積集合作成関数\r\n    const  intersection = (setA, setB)=> {\r\n        let _intersection = new Set();\r\n        for (let elem of setB) {\r\n            if (setA.has(elem)) {\r\n                _intersection.add(elem);\r\n            }\r\n        }\r\n        return _intersection;\r\n    };\r\n\r\n\r\n    const searchTagArray=()=>{\r\n        if(!tag_source || tag_source.length===0) return;\r\n        \r\n        //現在取得しているリストをSetに変換、比較に使う\r\n        const nowTag=new Set(selected.map((d)=>{return d.keyTagMain.id;}));\r\n\r\n        const nowGroup=new Set(selected.map((d)=>{return d.strGroup;}));\r\n\r\n        const newTagArray=[];\r\n        let phaseNow=selected.reduce((acc,value)=>(acc<value.numTagPhase ? value.numTagPhase : acc),0);\r\n\r\n        const showArray=(str)=>{\r\n            const s=str.split(\",\")\r\n            if (s==[]) return [];\r\n            return s.map((d)=>parseInt(d));\r\n        }\r\n  \r\n        tag_source.forEach(element => {\r\n            //要素のdelに現在\r\n            let showFlg=false;\r\n            //新規タグの表示条件に選択中のタグが入っていたら表示候補にする\r\n            const hasEl=new Set(showArray(element.strShow));\r\n            if(intersection(hasEl,nowTag).size>0)  showFlg=true;\r\n\r\n            //自分自身がすでに選択されていたら候補に入れない\r\n            if(nowTag.has(element.id))  showFlg=false;  \r\n            //すでにグループの項目が設定されていたら候補に入れない\r\n            if(element.strGroup && nowGroup.has(element.strGroup)){\r\n                showFlg=false;\r\n            }               \r\n\r\n            //表示条件に該当したら選択候補に追加する\r\n            if(showFlg) newTagArray.push(element);\r\n        \r\n        });\r\n\r\n        //選択候補があったらそのまま選択候補を表示に回す\r\n        if(newTagArray.length>0){\r\n            setTagArray(newTagArray);\r\n            return;    \r\n        }\r\n        \r\n        //選択肢がなかった場合、一度Phaseを上げて再度探してみる\r\n        phaseNow+=1;\r\n        //この際はフェーズが合えば非表示でなければすべて表示する\r\n        tag_source.forEach(element => {\r\n            if(element.numTagPhase===phaseNow){\r\n                const delEl=new Set(element.del);    \r\n                if(intersection(delEl,nowTag).size===0) newTagArray.push(element);\r\n            }\r\n\r\n        });\r\n        setTagArray(newTagArray);\r\n    };\r\n\r\n    //selectedの新規内容をstateの書く場所に設置する\r\n    const putSelectedInPlace=(data)=>{\r\n        const ss=Object.assign([],data);\r\n        setSelected(data);\r\n        if (data.length==0){\r\n            setDefs([]);\r\n            setLastOne({});\r\n            return;\r\n        }\r\n        const la=ss.pop();\r\n        setDefs(ss);\r\n        setLastOne(la);\r\n\r\n    };\r\n\r\n\r\n    const onClick=(data)=>{\r\n        let nowselected=[...selected,data];\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const onDelete=()=>{\r\n        let nowselected=Object.assign([],selected);\r\n        const ts=nowselected.pop();\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const onDecide=(data,txt)=>{\r\n        let copy=Object.assign({},data);\r\n        console.log(\"copy\",copy);\r\n        copy.keyTagMain.strTagName=copy.keyTagMain.strTagName+\":\"+txt;\r\n        let nowselected=[...selected,copy];\r\n        putSelectedInPlace(nowselected);\r\n    };\r\n\r\n    const sendAction=(text)=>{\r\n        const restagarray=selected.map((d)=>{\r\n            if (d.keyTagMain.strTagName.includes(\":\")){\r\n                const st=d.keyTagMain.strTagName.replace(/.+\\:/, \":\");\r\n                return d.keyTagMain.id+st; \r\n            }else{\r\n                return d.keyTagMain.id;\r\n            }\r\n        });\r\n\r\n        //console.log(\"restagarray\",restagarray);\r\n        dispatch(pushNewFormedMemo(restagarray.join(\",\"),text));\r\n    }\r\n\r\n    const closeAction=()=>{\r\n        setSelected([]);\r\n        setDefs([]);\r\n        setLastOne({});\r\n    }\r\n\r\n    const onEnd=(text)=>{\r\n        //console.log(\" ここで終わり　処理をDispatchする \");\r\n        sendAction(text);\r\n        closeAction();\r\n        \r\n        props.onClose();\r\n    };\r\n    \r\n    const onContinue=(text)=>{\r\n        sendAction(text);\r\n        closeAction();    };\r\n\r\n    const handleClose=()=>{\r\n        //setOpen(false);\r\n        closeAction();\r\n        props.onClose();\r\n    }\r\n\r\n\r\n    const TagButton=(data)=>{\r\n       return (\r\n            <Chip    \r\n                variant={selected.some((el)=>el===data) ? 'outlined': 'default' }\r\n                color={ secondarySet.includes(data.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(data.keyTagMain.numTagType) ? \"primary\" : \"default\"}\r\n                        \r\n                label={data.keyTagMain.strTagName}\r\n                clickable\r\n                onClick={(e)=>onClick(data)}\r\n            />\r\n\r\n       )\r\n    };\r\n\r\n    //複数行入力のテキストボックスが分岐で作成できなかったので別関数にする\r\n    const multilineText=(data)=>{\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    //id=\"standard-number\"\r\n                    label={data.name}\r\n                    inputRef={textRef}\r\n                    className={classes.textField}\r\n                    type={\"text\"}\r\n                    multiline\r\n                    rows= {4} \r\n                    InputLabelProps={{\r\n                        shrink: true, }}\r\n                    defaultValue={\"\"}\r\n                    //onChange={(e)=>onInput(e)}\r\n                />\r\n                <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onDecide(data, textRef.current.value)}>次へ</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const CheckSpecialTag=(data)=>{\r\n        let inputType=\"none\";\r\n        let defaultValue=\"none\";\r\n        console.log(\"CheckSpecialTag\",data);\r\n        \r\n        const date=new Date();\r\n        switch (data.keyTagMain.numTagType){\r\n            case TAG_NUMBER_INPUT:\r\n                inputType=\"number\";\r\n                defaultValue=0;\r\n                break;\r\n            case TAG_TEXT_INPUT:\r\n                inputType=\"text\";\r\n                defaultValue=\"\";\r\n                break;\r\n        \r\n            case TAG_MULTILINE_INPUT:\r\n                return multilineText(data);\r\n\r\n            case TAG_DATE_INPUT:\r\n                inputType=\"date\";\r\n                defaultValue=date.getFullYear()+\"-\"+(\"0\"+(date.getMonth()+1)).slice(-2)+\"-\"+(\"0\"+date.getDate()).slice(-2);\r\n                break;\r\n\r\n            case TAG_TIME_INPUT:\r\n                \r\n                inputType=\"time\";\r\n                defaultValue=(\"0\"+(date.getHours())).slice(-2)+\":\"+(\"0\"+date.getMinutes()).slice(-2);\r\n                break;\r\n            default :\r\n                return (\r\n                    TagButton(data)\r\n                );\r\n        }\r\n\r\n\r\n        //MULTILINE以外は納めることが出来るのでまとめておく\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    //id=\"standard-number\"\r\n                    label={data.name}\r\n                    inputRef={textRef}\r\n                    className={classes.textField}\r\n\r\n                    type={inputType}\r\n                    InputLabelProps={{\r\n                        shrink: true, }}\r\n                    defaultValue={defaultValue}\r\n                    //onChange={(e)=>onInput(e)}\r\n                />\r\n                <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onDecide(data, textRef.current.value)}>次へ</Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n    const secondarySet=[1]\r\n    const primarySet=[2,3,4,11]\r\n\r\n    return (\r\n        <Modal\r\n\r\n            className={classes.modal}\r\n            open={props.open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            closeAfterTransition\r\n        >\r\n            <div className={classes.paper}>\r\n            \r\n            <div className={classes.root}>\r\n                <div><Typography variant='h6' >簡単情報入力フォーム</Typography> </div>\r\n                <hr/>\r\n                <div>\r\n                {defs.length>0 ?\r\n                    defs.map((d)=>{\r\n                        \r\n                    //console.log(d);\r\n                        return (\r\n                            <Chip    \r\n                                variant='default' \r\n                                color={ secondarySet.includes(d.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(　d.keyTagMain.numTagType) ? \"primary\" : \"default\" }\r\n                                label={d.keyTagMain.strTagName}\r\n                            />\r\n                        )\r\n                    })\r\n                    :\r\n                    <div/>\r\n                }\r\n                </div>\r\n                { Object.keys(lastOne).length>0 ?    \r\n                    <Chip    \r\n                        variant='outlined'\r\n                        color={ secondarySet.includes(lastOne.keyTagMain.numTagType) ? \"secondary\" : 　primarySet.includes(　lastOne.keyTagMain.numTagType) ? \"primary\" : \"default\"}\r\n                        label={lastOne.keyTagMain.strTagName}\r\n                        clickable\r\n                        onClick={(e)=>onDelete(lastOne)}\r\n                    />\r\n                    :\r\n                    \r\n                    <div>登録内容を選択してください</div>\r\n\r\n                }\r\n            </div>\r\n            <hr/>\r\n\r\n            <div className={classes.root}>\r\n\r\n            {\r\n            tagArray.length===1 ?\r\n                \r\n                CheckSpecialTag(tagArray[0])\r\n            :tagArray.length>0 ?\r\n                tagArray.map((d)=>{\r\n                    return (\r\n                        TagButton(d)    \r\n                    )\r\n                })\r\n            :\r\n                // 次への選択肢が一切なくなったら\r\n                <div>\r\n                    <div>\r\n                        {/* 最後に文章を書けるようにしておく */}\r\n                        <TextField\r\n                        //id=\"standard-number\"\r\n                        inputRef={textRefMain}\r\n                        className={classes.textField}\r\n\r\n                        label=\"補足\"\r\n                        placeholder=\"特に書くことがなければ登録ボタンを押してください\"\r\n                        InputLabelProps={{\r\n                            shrink: true, }}\r\n                        //onChange={(e)=>onInput(e)}\r\n                    />\r\n                    </div>\r\n                    <div>\r\n\r\n\r\n                        <Button size={\"small\"} variant='contained' color=\"primary\" onClick={()=>onEnd(textRefMain.current.value)}>登録</Button>\r\n                        <Button size={\"small\"} variant='contained' color=\"secondary\" onClick={()=>onContinue()}>さらに登録</Button>\r\n                    </div>\r\n                </div>\r\n            }\r\n            </div>\r\n        </div>\r\n\r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default FormedTagPutModal;","import axios from \"axios\";\r\nimport { API_URL } from \"../../lib/ServiceConfig\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport {GoogleLogin,GoogleLogout} from 'react-google-login';\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState,useEffect } from \"react\";\r\nimport {CONNECT_ERROR,ERROR_RESET, MEMO_END} from '../../lib/ActionTypeString';\r\n\r\n\r\nconst googleClientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\nconst drfClientId = process.env.REACT_APP_DRF_CLIENT_ID;\r\nconst drfClientSecret = process.env.REACT_APP_DRF_CLIENT_SECRET;\r\n\r\nexport const LoginButton=({red, callback})=>{\r\n    const [redirect ,setRedirect]=useState(red);\r\n    const dispatch = useDispatch();\r\n    const history=useHistory();\r\n    const LOGIN_URL=`${API_URL}/auth/convert-token`;\r\n\r\n    const SetAuthConnection = (response) => {\r\n        console.log(\"LOGI_N_URL \",LOGIN_URL);\r\n        axios.post(`${API_URL}/auth/convert-token`, {\r\n            token: response.accessToken,\r\n            backend: \"google-oauth2\",\r\n            grant_type: \"convert_token\",\r\n            client_id: drfClientId,\r\n            client_secret: drfClientSecret,\r\n        })\r\n        .then((res) => {\r\n            const { access_token, refresh_token } = res.data;\r\n            console.log(access_token,refresh_token)\r\n            localStorage.setItem(\"access_token\", access_token);\r\n            localStorage.setItem(\"refresh_token\", refresh_token);\r\n            \r\n            history.push(\"/main\");\r\n        })\r\n        .catch((err) => {\r\n            console.log(\"Error Google login\", err);\r\n            dispatch({type:CONNECT_ERROR});\r\n        });\r\n    };\r\n    \r\n\r\n\r\n    return(\r\n        <div>\r\n            <GoogleLogin\r\n            clientId={googleClientId}\r\n            buttonText=\"LOGIN WITH GOOGLE\"\r\n            onSuccess={(response) => SetAuthConnection(response)}\r\n            render={(renderProps) => (\r\n            <Button\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                variant=\"contained\"\r\n                color='primary'\r\n                type=\"button\"\r\n                class=\"login-with-google-btn\"\r\n            >\r\n                <Typography variant=\"h6\" gutterBottom >\r\n                ログイン\r\n                </Typography>\r\n            </Button>\r\n            )}\r\n            onFailure={(err) => console.log(err.error,err.details)}\r\n            />\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport const LogOutButton=(props)=>{\r\n    const dispatch = useDispatch();\r\n    const history=useHistory();\r\n    const handleLogOutAction = () => {\r\n        localStorage.setItem(\"access_token\", \"\");\r\n        localStorage.setItem(\"refresh_token\", \"\");\r\n        dispatch({type:ERROR_RESET});\r\n        dispatch({type:MEMO_END})\r\n        history.push(\"/logout\");    \r\n    };\r\n    \r\n    return(\r\n        <div>\r\n            <GoogleLogout\r\n                clientId={googleClientId}\r\n                buttonText=\"Logout\"\r\n                icon={false}\r\n                onLogoutSuccess={()=>handleLogOutAction()}\r\n            >\r\n                <Button\r\n                        onClick={handleLogOutAction}\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        type=\"button\"\r\n                        //class=\"login-with-google-btn\"\r\n                >\r\n                ログアウト\r\n                </Button>\r\n            </GoogleLogout>\r\n\r\n        </div>\r\n  \r\n    )\r\n}\r\n\r\n\r\n     ","import React from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\n//import { Link } from '@material-ui/core';\r\nimport { Link,useHistory } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {LogOutButton} from './parts/AuthButtons';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nconst menuStyle=makeStyles((theme)=>({\r\n    door:{\r\n      width:\"100%\"\r\n    },\r\n    \r\n    loginButtonBefore:{\r\n        animation: \"$flash 4s linear infinite\",\r\n        background:'gray'\r\n      },\r\n\r\n      listShelf: {\r\n        padding: 0,\r\n        //position: \"relative\"\r\n      },\r\n      \r\n      column: {\r\n        color: \"#2d8fdd\",\r\n        borderLeft: \"solid 6px #2d8fdd\",/*左側の線*/\r\n        background: \"#f1f8ff\",/*背景色*/\r\n        marginBottom: \"3px\",/*下のバーとの余白*/\r\n        lineHeight: 1.5,\r\n        padding: \"0.5em\"\r\n      }\r\n\r\n}));\r\n\r\nconst SideMenu=({onClose=null})=>{\r\n    const dispatch=useDispatch();\r\n    const classes=menuStyle();\r\n    const history=useHistory();\r\n    const userRank=useSelector(state=>state.auth_login.userRank);\r\n\r\n    const onMove=(path=\"none\")=>{\r\n        console.log(\"close\");\r\n        if (path!==\"none\"){\r\n          history.push(path);\r\n        }\r\n        if (onClose){\r\n          onClose();\r\n        }\r\n\r\n    };\r\n\r\n    const menuList=[\r\n      {path:\"/favorite\" , name:\"お気に入り一覧\"},\r\n      {path:\"/notice\" , name:\"通知一覧\"},\r\n      {path:\"/tagconfig\" , name:\"タグ設定\"},\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.listShelf}>\r\n            <div className={classes.column}>\r\n            <LogOutButton />\r\n            </div>\r\n            {\r\n              menuList.map((menu)=>(\r\n                <div className={classes.column} onClick={()=>onMove(menu.path)}><Typography variant='subtitle1' gutterBottom > {menu.name} </Typography></div>\r\n              ))\r\n            }\r\n            {userRank>1 ?\r\n              <div className={classes.column} onClick={()=>onMove(\"/tagadmin\")}><Typography variant='subtitle1' gutterBottom > タグ管理メニュー </Typography></div>\r\n              :\r\n              <div/>\r\n            }\r\n\r\n          </div>\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default SideMenu;\r\n        ","import React,{useEffect,useState} from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\n//import { Link } from '@material-ui/core';\r\nimport { Link,useHistory } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport SideMenu from './SideMenu';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Drawer  from '@material-ui/core/Drawer';\r\nimport {OPEN_PASSWORD}  from '../lib/ActionTypeString';\r\nimport {LogOutButton} from './parts/AuthButtons';\r\n\r\n\r\nconst drawerWidth=240;\r\n\r\nconst menuStyle=makeStyles((theme)=>({\r\n    door:{\r\n      width:\"100%\"\r\n    },\r\n    \r\n    loginButtonBefore:{\r\n        animation: \"$flash 4s linear infinite\",\r\n        background:'gray'\r\n  \r\n  \r\n      },\r\n\r\n      listShelf: {\r\n        padding: 0,\r\n        position: \"relative\"\r\n      },\r\n      \r\n      column: {\r\n        color: \"#2d8fdd\",\r\n        borderLeft: \"solid 6px #2d8fdd\",/*左側の線*/\r\n        background: \"#f1f8ff\",/*背景色*/\r\n        marginBottom: \"3px\",/*下のバーとの余白*/\r\n        lineHeight: 1.5,\r\n        padding: \"0.5em\"\r\n      }\r\n\r\n}));\r\n\r\nconst SideDrawer=(props)=>{\r\n    const dispatch=useDispatch();\r\n    const classes=menuStyle();\r\n    const history=useHistory();\r\n\r\n    //console.log(\" props.ismobile in drawer\",props.isMobile);\r\n\r\n    return (\r\n        <Drawer \r\n          anchor={\"left\"}\r\n          width={200}          \r\n          variant={ props.mobile ? \"temporary\" :\"permanent\" }\r\n          open={props.open} \r\n          onClose={props.onClose}\r\n          >\r\n            {props.mobile &&\r\n              <IconButton onClick={()=>props.onClose()} ><ArrowBackIcon/></IconButton>\r\n            }\r\n            <SideMenu  onClose={ props.mobile &&  props.onClose }/>\r\n      </Drawer>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default SideDrawer;\r\n        ","import React ,{useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport  {useSnackbar} from 'notistack';\r\n\r\n\r\nconst FeedbackSnackbar=()=> {\r\n\r\n    const {enqueueSnackbar}= useSnackbar();\r\n    const snacklist=useSelector(state=>state.notice_main.snack);\r\n\r\n    useEffect(() => {\r\n        //console.log(\"SNACK!!\");\r\n        if(snacklist.length>0){\r\n\r\n           enqueueSnackbar(snacklist.slice(-1)[0],{ variant: 'info',autoHideDuration:1000});\r\n\r\n        }\r\n    \r\n    }, [snacklist]);\r\n\r\n    return null;\r\n}\r\n\r\nexport default FeedbackSnackbar;","import React from 'react';\r\nimport {connect}  from 'react-redux';\r\nimport {Button} from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\n\r\n//axios.defaults.baseURL = 'http://localhost:8000';\r\n　//axios.defaults.headers.common['Accept'] = 'application/json'\r\n　//axios.defaults.headers.common['Content-Type'] = 'application/json;charset=utf-8'\r\n\r\n　//axios.defaults.headers.common['Access-Control-Allow-Origin'] = 'http://localhost:8000'\r\n　//axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest'\r\n\r\nconst TestAuthAction=(props)=>{\r\n    const onClick=()=>{\r\n        axios.get('http://www.yahoo.co.jp/')\r\n        .then(results=>{\r\n            console.log(results);\r\n        }).catch(error=>{\r\n            console.log(error);\r\n        });\r\n\r\n        \r\n\r\n    \r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Button onClick={onClick}> 押してみそ </Button>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default TestAuthAction;\r\n","import React from 'react';\r\n\r\n// import TestHooks  from './TestHooks';\r\n// import TestMemoInsertButton  from './TestMemoInsertButton';\r\n// import TestMakeMemoModal  from './TestMemoMakeModal';\r\n// import TestMemoDeleteModal  from './TestMemoDeleteModal';\r\n// import {TestMemoColumn} from '../test/TestMemoColumn';\r\n// import {TestMainHeader} from './TestMainHeader';\r\n//import TestPasswordModal from '../test/TestPasswordModal';\r\n//import TestLogoutModal from '../test/TestLogoutModal';\r\n//import TestSearchForm from '../test/TestSearchForm';\r\n// import TestMemoThread from '../test/TestMemoThread';\r\n// import TestFollowColumn from './TestFollowColumn';\r\n// import TestFollowList from './TestFollowList';\r\n// import {TestMemoList} from './TestMemoList';\r\n import TestAuthAction  from '../test/TestAuthAction';\r\n//import { TestTagSearchPanel } from '../test/TestTagSearcPanel';\r\n//import { TestTagSearchList } from '../test/TestTagSearcList';\r\n//import TestReplyColumnList from '../test/TestReplyColumnList';\r\n// import {TestTagPutModal} from '../test/TestTagPutModal';\r\n//import {TestNoticeColumn} from '../test/TestNoticeColumn';\r\n//import {TestNoticeList} from '../test/TestNoticeList ';\r\nimport {TestFreeTagPutModal} from '../test/TestFreeTagPutModal';\r\nimport TestLoading from '../test/TestLoading';\r\n\r\nconst TestMain=(props)=>{\r\n\r\n    return (\r\n        <div>\r\n            <h1>Test Main</h1>\r\n            <TestAuthAction/> \r\n            {/*  <TestMemoInsertButton/>\r\n            <TestMakeMemoModal/>\r\n             \r\n            <TestPasswordModal/>\r\n            <TestLoading/>\r\n            {/*<TestMemoDeleteModal/>\r\n            <TestMemoList/>\r\n            <TestTagSearchPanel/>\r\n            <TestTagSearchList/>\r\n            <TestReplyColumnList/>\r\n            <TestTagPutModal/>\r\n            <TestNoticeColumn/>\r\n            <TestNoticeList />\r\n            \r\n            <TestFreeTagPutModal/>\r\n\r\n            <TestSearchForm/>\r\n            <TestMainHeader/> \r\n            <TestFollowColumn/>\r\n            <TestFollowList/>*/}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default TestMain;\r\n","import React from 'react'\r\nimport {Button,Modal,Accordion,AccordionSummary,AccordionDetails,Collapse,CircularProgress}  from '@material-ui/core';\r\nimport { ExpandMoreIcon } from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport ButtonSample from './ButtonSample';\r\n\r\nconst styles=makeStyles((theme)=>({\r\n    loadingRoot:{\r\n        background:\"#888\",\r\n        opacity:0.3,\r\n        height:\"100vh\",\r\n        top:0\r\n         \r\n    },\r\n       \r\n    loadingCircle :{\r\n        zIndex:2000,\r\n        background:\"#888\",\r\n        //marginTop:\"0%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginTop:\"30%\",\r\n        alignItems: \"center\",\r\n        //opacity:0.5\r\n    }\r\n}));\r\n\r\n\r\nconst TestLoading=(props)=>{\r\n    const classes=styles();\r\n\r\n\r\n    return (\r\n        <div className={classes.loadingRoot}>AAAA\r\n           \r\n             <div>後に書いてあるもの</div>\r\n             <div className={classes.loadingCircle} ><CircularProgress color=\"inherit\" /></div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TestLoading;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {Chip} from '@material-ui/core';\r\nimport {TYPE_TAG_GUEST,TYPE_TAG_MEMBER} from '../../lib/TagTypeNames'; \r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\r\nimport { makeStyles,createStyles,Theme } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  ({\r\n    funcColor:{\r\n        color:\"red\",\r\n      borderColor:\"red\"\r\n    }, \r\n    staffColor:{\r\n      color:\"green\",\r\n      borderColor:\"green\"\r\n    },\r\n    guestColor:{\r\n      color:\"gold\",\r\n      borderColor:\"gold\"\r\n    },\r\n    placeColor:{\r\n        color:\"blue\",\r\n        borderColor:\"blue\"\r\n    },\r\n    actionColor:{\r\n        color:\"blue\",\r\n        borderColor:\"blue\"\r\n    },\r\n  }));\r\n\r\nexport const TagChip=({d})=>{\r\n    const tag_source=useSelector(state=>state.auth_login.all_tag);\r\n\r\n    const classes=useStyles();\r\n\r\n    const colorPalette=[\r\n        \"info\",\r\n        classes.staffColor,\r\n        classes.guestColor,\r\n        classes.placeColor,\r\n        classes.actionColor\r\n    ];\r\n    //console.log(\"tagchip\", d);\r\n\r\n    const sd=d.split(\":\");\r\n    const tagdata=tag_source.find(el=> el.id==sd[0]);\r\n    //console.log(\"data:\" ,tagdata);\r\n    let name=\"\";\r\n    \r\n    if( !tagdata|| typeof(tagdata)=='undefined'){\r\n        return (<Chip label={\"不明\"}/>)\r\n    }else if (sd.length==2){\r\n        name= tagdata.strTagName+\":\"+sd[1];\r\n    }else{\r\n        name=tagdata.strTagName;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Chip\r\n            \r\n            icon={tagdata.numTagType===TYPE_TAG_GUEST ?\r\n                <FaceIcon/>                            \r\n                : tagdata.numTagType===TYPE_TAG_MEMBER &&\r\n                <TagFacesIcon/>\r\n                \r\n            }\r\n\r\n            variant=\"outlined\"\r\n            size='small'\r\n            className={colorPalette[(tagdata.numTagType)-1] }\r\n            label={name}\r\n            />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport const TagChipList=({listStr})=>{\r\n    const list=listStr.split(\",\");\r\n\r\n    return(\r\n        list.map((d)=>{\r\n            return (<TagChip d={d} />)\r\n        })\r\n    \r\n    )\r\n\r\n}\r\n","//各メモの表示を行う\r\n\r\n\r\n//初期状態メモヘッダーのみ表示\r\n\r\n//ヘッダーから開閉イベントを受けたら詳細をアニメーションで展開する\r\n\r\nimport React ,{useState,useRef} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport {IconButton,Box, Button}  from '@material-ui/core';\r\nimport {Menu,MenuItem} from '@material-ui/core';\r\n\r\nimport {DoubleArrowOutlined} from '@material-ui/icons';\r\nimport ReplyTwoToneIcon from '@material-ui/icons/ReplyTwoTone';\r\nimport AddCircleOutlineTwoToneIcon from '@material-ui/icons/AddCircleOutlineTwoTone';\r\nimport CheckBoxTwoToneIcon from '@material-ui/icons/CheckBoxTwoTone';\r\nimport CheckBoxOutlineBlankTwoToneIcon from '@material-ui/icons/CheckBoxOutlineBlankTwoTone';\r\nimport StarTwoToneIcon from '@material-ui/icons/StarTwoTone';\r\nimport StarBorderTwoToneIcon from  '@material-ui/icons/StarBorderTwoTone';\r\nimport { Typography } from '@material-ui/core';\r\nimport TagFaces from '@material-ui/icons/TagFaces';\r\n\r\nimport  {getDateMessage} from  '../lib/UtilityLibrary';\r\nimport {TagChipList} from './parts/TagChip';\r\nimport {MAKE_NEWFOLLOW_MODAL,MAKE_NEW_REPLY_MODAL} from '../lib/ActionTypeString';\r\nimport {hasreadCheck,hasfavCheck,editMemo, deleteMemo} from '../actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n\r\n\r\n    memo:{            \r\n        width: '90%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1,2),\r\n        borderTop: '2px solid #ccc',\r\n        fontSize:'15px'\r\n      },\r\n      ulbutton:{\r\n        display:\"flex\",\r\n        listStyle:\"none\",\r\n        align:\"flex-end\",  \r\n    },\r\n    \r\n    topset:{\r\n        display:\"flex\",\r\n        justifyContent:\"space-between\"\r\n\r\n    },\r\n    menuButton:{\r\n        spacing:'10px',\r\n    },\r\n    toName:{\r\n        textAlign:\"right\",\r\n    },\r\n    todatePublish:{\r\n        textAlign:\"right\",\r\n    },\r\n    toFooter:{\r\n        margin:\"0 0 0 auto\"\r\n    },\r\n\r\n    icons:{\r\n        justifyContent: \"flex-end\",\r\n    },\r\n\r\n    headertext:{\r\n        justifyContent: \"flex-start\",  \r\n    },\r\n\r\n    libutton:{\r\n        margin:10\r\n    },\r\n\r\n    followarea:{\r\n        marginLeft:\"20%\",\r\n        border:'2px solid #888',\r\n        width:\"80%\",\r\n        fontSize:\"12px\"\r\n    },\r\n\r\n    editable:{\r\n        border:\"2px solid\",\r\n        borderColor:\"#ffd700\",\r\n        borderRadius:\"10px\",\r\n       \r\n        focus:{\r\n            outline:\"none\"\r\n        }\r\n    },\r\n    deleted:{\r\n        textAlign:\"center\",\r\n        verticalAlign:\"middle\",\r\n        display:\"table-cell\",\r\n        height:\"50px\",\r\n        borderRadius:\"5px\",\r\n        backgroundColor:\"#ddd\",\r\n        color:\"#888\",\r\n        fontStyle:\"italic\"\r\n\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\nconst MemoColumn=({data,read,fav})=>{\r\n    //console.log(props);\r\n    const TEXT_LIMIT=40;\r\n    const [anchorEl,setAnchorEl]=useState(null);\r\n    const menuOpen=Boolean(anchorEl);\r\n\r\n    const [editable,setEditable]=useState(false);\r\n    const [bdelete,setDelete]=useState(false);\r\n    const [editText,setEditText]=useState(data.strMainText);\r\n    //const editform=useRef(data.strMainText.replace(/\\n/g,'<br>'));\r\n    \r\n    const userId = useSelector(state => state.auth_login.userId,-1);\r\n    const user_list = useSelector(state => state.auth_login.user_list,[]);\r\n\r\n    const [expanded ,setExpanded]=useState(false);\r\n    const [isFav, setFavorite] = useState(fav.includes(data.id));\r\n    const [hasRead, setRead] = useState(read.includes(data.id));\r\n    \r\n    const history=useHistory();\r\n    const classes=useStyles();\r\n    const dispatch= useDispatch();\r\n\r\n    const onFavClick=()=>{\r\n        setFavorite(!isFav);\r\n        dispatch(hasfavCheck(data.id,!isFav));\r\n    };\r\n\r\n    const onReadClick=()=>{\r\n        setRead(!hasRead);\r\n        dispatch(hasreadCheck(data.id,!hasRead));\r\n    };\r\n\r\n     const getNames=(arr)=>{\r\n         //console.log(\"arr:\", arr);\r\n         const ars=String(arr).split(\",\");\r\n         const names=ars.map((d)=>{\r\n             if( String(userId) ===d ) return \"自分\";\r\n\r\n            const tg=user_list.find((el)=>el.id===parseInt(d));\r\n            //console.log(\"tg\",tg);\r\n            if (typeof(tg)==\"undefined\") return \"不明\";\r\n            return tg.strName;\r\n         });\r\n         \r\n         return names.reduce((acc,value)=>acc+\",\"+value);\r\n     };\r\n\r\n\r\n     const MainText=()=>{\r\n        const txtSource=data.strMainText;\r\n\r\n        if (txtSource.length<TEXT_LIMIT) return (\r\n            <div style={{whiteSpace: 'pre-line'}}>\r\n               <Typography variant='body1' >{txtSource}</Typography>\r\n            </div>); \r\n\r\n        return (\r\n            <div>\r\n            {expanded?\r\n                <div>\r\n                    <span style={{whiteSpace: 'pre-line'}} ><Typography variant='body1' >{txtSource}</Typography></span>\r\n                    <span onClick={()=>setExpanded(false)} ><Typography variant='body1' ><b>元に戻す</b></Typography></span>\r\n                </div>\r\n            :\r\n            <div>\r\n                <span style={{whiteSpace: 'pre-line'}}><Typography variant='body1' >{txtSource.substring(0,TEXT_LIMIT)}....</Typography></span>\r\n                <span onClick={()=>setExpanded(true)} ><Typography variant='body1' ><b>残りを開く</b></Typography></span>\r\n            </div>\r\n            }\r\n            </div>\r\n        )\r\n    };\r\n\r\n     const MemoManipulate=()=>{\r\n         const openFunc=()=>{\r\n            setEditable(true);\r\n            setAnchorEl(null);\r\n         }\r\n    \r\n        const menuClick=(e)=>{\r\n            setAnchorEl(e.currentTarget);            \r\n        };\r\n\r\n        const menuClose=()=>{\r\n            setAnchorEl(null);\r\n        }\r\n        const startDelete=()=>{\r\n            setDelete(true);\r\n            setAnchorEl(null);\r\n        }\r\n\r\n         return(\r\n             <span>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={menuClick} ><TagFaces/></IconButton>\r\n            <Menu\r\n            id=\"basic-menu\"\r\n            anchorEl={anchorEl}\r\n            open={menuOpen}\r\n            onClose={menuClose}\r\n            MenuListProps={{\r\n              'aria-labelledby': 'basic-button',\r\n            }}\r\n            >\r\n                <MenuItem onClick={()=>openFunc(data.strMainText)}>メモを修正</MenuItem>\r\n                <MenuItem onClick={startDelete}>メモを削除</MenuItem>\r\n            </Menu>\r\n          </span>\r\n         )\r\n     }\r\n\r\n    const EditableColumn=(str)=>{\r\n        \r\n        const checkEditable=(str)=>{\r\n            setEditText(str);\r\n        }\r\n        const cancelEditable=()=>{\r\n            setEditable(false);\r\n        }\r\n\r\n        const onEditEnd=()=>{\r\n        \r\n            const sendTxt=editText.replace(/<br>/g,'\\n');\r\n            dispatch(editMemo(data.id,sendTxt));\r\n            setEditable(false);    \r\n        }\r\n    \r\n        return(\r\n            <Box >\r\n                <div>\r\n                <div><Typography variant='h6' >編集</Typography></div>\r\n                <div className={classes.editable}>\r\n                 <span  contentEditable dangerouslySetInnerHTML={{__html:data.strMainText.replace(/\\n/g,'<br>')}} onInput={(e)=>checkEditable(e.target.innerHTML)} />\r\n                 </div>\r\n                </div>\r\n                <div className={classes.toFooter}>\r\n                    <span><Button color=\"primary\" variant=\"contained\" onClick={()=>onEditEnd()} ><Typography variant='button' >投稿</Typography></Button> </span>\r\n                    <span><Button color=\"default\" variant=\"contained\" onClick={()=>cancelEditable()} ><Typography variant='button' >キャンセル</Typography></Button> </span>\r\n                </div>\r\n            \r\n            </Box>\r\n        )\r\n     };\r\n\r\n\r\n\r\n    const DeleteColumn=()=>{\r\n        \r\n        const cancelDelete=()=>{\r\n            setDelete(false);\r\n   \r\n        }\r\n        const onDeleteEnd=()=>{\r\n            dispatch(deleteMemo(data.id));    \r\n        }\r\n    \r\n        return(\r\n            <Box >\r\n                <div><Typography variant='h6' >このメモを削除する</Typography></div>\r\n                <div className={classes.toFooter}>\r\n                    <span><Button color=\"primary\" variant=\"contained\" onClick={()=>onDeleteEnd()} ><Typography variant='button' >削除</Typography></Button> </span>\r\n                    <span><Button color=\"default\" variant=\"contained\" onClick={()=>cancelDelete()} ><Typography variant='button' >キャンセル</Typography></Button> </span>\r\n                </div>\r\n            \r\n            </Box>\r\n        )\r\n     };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Box className={classes.memo}>\r\n                    <div className={classes.topset} >\r\n                        <span className={classes.headertext}>\r\n                        <div><Typography variant='h6' >{getDateMessage(data.dateRegist) }</Typography></div>\r\n                        <div><Typography variant='subtitle2' >{getNames(data.keySender)}より </Typography></div> \r\n                        </span>\r\n                        <span className={classes.ulbutton}>\r\n                            <span className={classes.ulbutton}>\r\n                                <IconButton onClick={!hasRead ?  onReadClick : ()=>{} }>\r\n                                    {hasRead ? (<CheckBoxTwoToneIcon/>  ):( <CheckBoxOutlineBlankTwoToneIcon/>)}\r\n                                </IconButton>\r\n                            </ span>\r\n                        \r\n                            <span className={classes.icons} >\r\n                                <IconButton onClick={onFavClick} >\r\n                                    {isFav ? ( <StarTwoToneIcon/> ):( <StarBorderTwoToneIcon/> )}\r\n                                </IconButton>\r\n                            \r\n                            </span>\r\n\r\n                            {userId===data.keySender & !data.boolHasDeleted ?\r\n                                <span className={classes.icons} >\r\n                                    {MemoManipulate()}\r\n                                </span>\r\n                                :\r\n                                <span/>\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                          \r\n                    {!editable ?\r\n                        <div>\r\n                            <div><span > <TagChipList listStr={data.strTaglist} /></span></div>\r\n                            { data.boolHasDeleted ?\r\n                                <div className={classes.deleted}><Typography variant='h6' >このメモは削除されました</Typography></div>\r\n                              :\r\n                                MainText()\r\n                              \r\n                            } \r\n\r\n                        </div>\r\n                    :\r\n                        EditableColumn(editText)\r\n                    }\r\n\r\n                    { data.keyFollowId &&\r\n                        <div className={classes.followarea}>\r\n                        < div><div>{getDateMessage(data.keyFollowId.dateRegist) }</div><div> <TagChipList listStr={data.keyFollowId.strTaglist} /> </div> <div>{data.keyFollowId.strMainText}</div></div>\r\n                        </div>\r\n                    }\r\n                    {bdelete ?\r\n                        DeleteColumn()\r\n                    :\r\n                        <div className={classes.ulbutton} >\r\n                            <span><IconButton edge=\"start\" color=\"inherit\"  className={classes.menuButton} onClick={()=>dispatch({type:MAKE_NEW_REPLY_MODAL,reply_source:data})} ><ReplyTwoToneIcon size=\"small\"/></IconButton></span>\r\n                            <span><IconButton edge=\"start\" ize=\"small\" color=\"inherit\" onClick={()=>dispatch({type:MAKE_NEWFOLLOW_MODAL,follow_data:data})} ><AddCircleOutlineTwoToneIcon size=\"small\"/></IconButton></span>\r\n                            {data.keyReplyBase &&\r\n                                <span><Button edge=\"start\" ize=\"small\" color=\"inherit\" onClick={()=>history.push(\"/reply/\"+data.id)}   endIcon={<DoubleArrowOutlined />}> 応答を開く </Button></span>\r\n                            }\r\n\r\n                            {data.boolHasModified &&\r\n                                <span> 修正あり </span>\r\n                            }\r\n                            <span className={classes.toFooter}>\r\n                                <div className={classes.todatePublish}> { getDateMessage(data.datePublish) }</div>\r\n                                {  data.listReceiver & data.listReceiver!==\"\" ?\r\n                                    <div className={classes.toName} >宛先:{getNames(data.listReceiver)}</div>\r\n                                    :\r\n                                    <div/>\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                </Box>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MemoColumn;","import React from 'react';\r\nimport {throttle} from 'lodash';\r\n\r\nexport const ScrollUpdater=(props)=>{\r\n\r\n    //実行関数　setNewTimeLine\r\n\r\n    //監視パラメータ　timeline\r\n    \r\n\r\n    const checkInEnd=throttle(() => {\r\n        const m1=Math.round(window.innerHeight + document.documentElement.scrollTop);\r\n        const m2=Math.round(document.documentElement.scrollHeight);\r\n        //console.log(\"m1 \",m1,\"m2 \",m2);\r\n\r\n        if (\r\n            //ブラウザによってずれが起きるためトリガーに少しだけ範囲を作る\r\n            Math.abs(m1-m2)>5\r\n        ) {\r\n            return;\r\n        }\r\n        if (!props.endflg)  props.scrollFunc();\r\n    \r\n        }, 200\r\n    );\r\n    \r\n    \r\n    React.useEffect(()=>{\r\n        //画面を切り替えたらとりあえずトップに戻す\r\n        document.documentElement.scrollTop=0;\r\n        props.scrollFunc();\r\n    },[]);\r\n    \r\n    React.useEffect(() => {\r\n        \r\n        window.removeEventListener('scroll', checkInEnd);\r\n        window.addEventListener('scroll', checkInEnd);\r\n        \r\n    \r\n        return () => {\r\n        window.removeEventListener('scroll', checkInEnd);\r\n        \r\n        };\r\n        //propsの中身は随時更新しないと同じ初期値を使いまわすことになる\r\n    }, [props.checkParam]); // eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    return (\r\n        <div/>\r\n    )\r\n\r\n}\r\n\r\n","import React ,{useState,useEffect}  from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport MemoColumn from './MemoColumn';\r\n//import {LOAD_NEW_MEMO} from '../lib/ActionTypeString';\r\nimport {loadNewMemo} from '../actions';\r\nimport {ScrollUpdater} from '../lib/windowScrollControll';\r\nimport { Grid } from '@material-ui/core';\r\nimport APICallController from '../lib/ConnectionLibrary'; \r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { getTimeStampNow } from '../lib/UtilityLibrary';\r\n//このリスト画面自体は通信にはかかわらず、親のコンポーネントからデータを渡す\r\n//このコンポーネント自体はスクロール位置に関係する\r\n\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\nconst MemoList=(props)=>{\r\n    //const dispatch=useDispatch();\r\n    const user_list=useSelector(state=>state.auth_login.user_list,[]);\r\n    const timeline=useSelector(state=>state.memo_main.timeline,[]);\r\n    const read=useSelector(state=>state.memo_main.read,[]);\r\n    const fav=useSelector(state=>state.memo_main.fav,[]);\r\n    \r\n    const endflg=useSelector(state=>state.memo_main.endflg);\r\n    const dispatch = useDispatch();\r\n    \r\n    const changFlg=useSelector(state=>state.memo_main.change);\r\n    useEffect(() => {\r\n        if(timeline.length>0){\r\n            dispatch(loadNewMemo(\"-1\"));\r\n        }\r\n    }, [changFlg]);\r\n\r\n\r\n    \r\n    const setNewTimeLine=()=>{\r\n        let fromDay=\"-1\";\r\n        if (timeline.length>0) {\r\n            fromDay=new Date(timeline.slice(-1)[0].dateRegist).toJSON();\r\n        } \r\n\r\n        if(endflg) return;\r\n\r\n        console.log(\" Add Start\",fromDay);\r\n        dispatch(loadNewMemo(fromDay));\r\n        //loadNewMemo(startnum);\r\n    };\r\n\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        <div className={classes.base}>\r\n            {user_list.length>0 && \r\n            <ScrollUpdater scrollFunc={()=>setNewTimeLine() }  checkParam={timeline} endflg={endflg} buffer={60} />\r\n            }\r\n            \r\n            <Grid spacing={2}>\r\n            {\r\n                timeline.map((d)=>{\r\n                    return (<MemoColumn\r\n                        key={d.id}\r\n                        data={d}\r\n                        read={read}\r\n                        fav={fav}\r\n                    />)\r\n                })\r\n            }\r\n            \r\n            </Grid>\r\n\r\n            \r\n            {endflg ?  <div>現在の表示内容は以上です。</div> : <div className={classes.progress}><LinearProgress/></div> }\r\n           \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MemoList;\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {CircularProgress}  from '@material-ui/core';\r\nimport { Modal } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst styles=makeStyles((theme)=>({\r\n    loadingRoot:{\r\n        display:\"absolute\",\r\n        zIndex:200000,\r\n        //background:\"#888\",\r\n        //opacity:0.1,\r\n        padding:\"10px\",\r\n        height:\"100vh\",\r\n        //top:0\r\n         \r\n    },\r\n       \r\n    loadingCircle :{\r\n        //background:\"#888\",\r\n        //marginTop:\"0%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginTop:\"30%\",\r\n        alignItems: \"center\",\r\n        opacity:0.5\r\n    }\r\n}));\r\n\r\nexport const CirculerSelf=()=>{\r\n    const classes=styles();\r\n    return(\r\n        <div className={classes.loadingRoot}>\r\n            <div className={classes.loadingCircle} >\r\n                <CircularProgress \r\n                    color=\"success\"  \r\n                    size={60}   \r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst CirculerLoading=(props)=>{\r\n    \r\n\r\n    const isLoad = useSelector(state => state.auth_login.isLoad,false);\r\n\r\n    return (\r\n            <div>\r\n                {props.isModal ?\r\n\r\n                    <Modal open={isLoad} closeAfterTransition onClose={()=>{}} >    \r\n                        <CirculerSelf/>\r\n                    </Modal>\r\n                : isLoad ?\r\n                    <CirculerSelf />\r\n                :<div/>\r\n                }\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CirculerLoading;","import React,{useEffect} from 'react';\r\nimport MemoList from \"../components/MemoList\";\r\nimport CirculerLoading from '../components/CirculerLoading';\r\n\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\nimport { loadNewMemo } from '../actions';\r\nimport APICallController from '../lib/ConnectionLibrary';\r\n\r\n\r\n//メインページの画面メイン\r\nconst MainListPage=(props)=>{\r\n    \r\n    //これはここで行う\r\n    APICallController.setView(\"main\");\r\n\r\n    const tag_list=useSelector(state=>state.auth_login.all_tag);\r\n    //メモの更新が行われた後、再度一覧を取得する\r\n\r\n    return (\r\n            <div className=\"page\">\r\n                {tag_list &&\r\n                    <MemoList/>\r\n                }            \r\n                <CirculerLoading isModal={false} />\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default  MainListPage;\r\n","import React ,{useState,useEffect}  from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport MemoColumn from './MemoColumn';\r\nimport { makeStyles} from '@material-ui/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport {ScrollUpdater} from '../lib/windowScrollControll';\r\nimport { getTaggedData } from '../actions';\r\nimport TagInputList from './TagInputList';\r\nimport { getTimeStampNow } from '../lib/UtilityLibrary';\r\n\r\n//このリスト画面自体は通信にはかかわらず、親のコンポーネントからデータを渡す\r\n//このコンポーネント自体はスクロール位置に関係する\r\n\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    }\r\n\r\n}))\r\n\r\n\r\nconst TagSearchList=(props)=>{\r\n    //const dispatch=useDispatch();\r\n    \r\n    const tag_list=useSelector(state=>state.auth_login.all_tag,[]);    \r\n    const timeline=useSelector(state=>state.tagged_main.timeline);\r\n    const read=useSelector(state=>state.tagged_main.read,[]);\r\n    const fav=useSelector(state=>state.tagged_main.fav,[]);\r\n\r\n    const endflg=useSelector(state=>state.memo_main.endflg,true);\r\n    //更新後の内容を反映するためのフラグ\r\n    const changeFlg=useSelector(state=>state.memo_main.change);\r\n\r\n\r\n    const [selected,setSelected]=useState([]);\r\n    const classes=listStyles();\r\n    const [start,setStart]=useState(false);\r\n    const [showEnd,setShowEnd]=useState(false);\r\n    const [showProgress,setShowProgress]=useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const setNewTagList=()=>{\r\n        console.log(\"setNewTagList  --\");\r\n        if(!timeline || selected.length==0 ) return;\r\n        const fromDay=new Date(timeline.slice(-1)[0].dateRegist).toJSON();\r\n        \r\n        sendSelectedTag(selected,fromDay,true);\r\n    };\r\n\r\n    useEffect(()=>{\r\n        if (tag_list.length>0){\r\n            setStart(true);\r\n        }\r\n        setShowEnd(timeline.length!==0 & endflg);\r\n        setShowProgress(timeline.length!==0 & !endflg);\r\n\r\n    },[tag_list,endflg,timeline]);\r\n\r\n\r\n    const sendSelectedTag=(arr,day=\"\", next=false)=>{\r\n        const arr_res=arr.map((d)=>d.id);\r\n        console.log(arr, arr_res);\r\n        if (day==\"\") day=\"-1\";\r\n\r\n        dispatch(getTaggedData(arr_res,day,next));\r\n    };\r\n\r\n    useEffect(()=>{\r\n        sendSelectedTag(selected);\r\n    },[changeFlg]);\r\n\r\n    const onSelect=(arr)=>{\r\n        setSelected(arr);\r\n        sendSelectedTag(arr);  \r\n    };\r\n    \r\n    return (\r\n        <div>\r\n        {start &&\r\n        <ScrollUpdater scrollFunc={()=>setNewTagList()} checkParam={timeline} endflg={endflg} buffer={60}/>\r\n        }\r\n        <div className={classes.base}>\r\n        <TagInputList setSelected={onSelect} end={false} />\r\n            {\r\n                timeline.length===0 ?\r\n\r\n                <div> 該当する検索結果は存在しません。<br/>タグを新規選択するか、現在選択のタグを外してください。 </div>                \r\n                :  \r\n                timeline.map((d)=>{\r\n\r\n                        return (<MemoColumn\r\n                            key={d.id}\r\n                            data={d}\r\n                            read={read}\r\n                            fav={fav}\r\n\r\n                        />)\r\n\r\n                    })\r\n\r\n            }\r\n            {  showEnd ?  <div>現在の表示内容は以上です。</div> :<div/>}\r\n            {  showProgress ? <div className={classes.progress}><LinearProgress/></div> :<div/> }\r\n                \r\n        </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default TagSearchList;\r\n","import React, {useEffect} from 'react';\r\nimport {useSelector}  from 'react-redux';\r\nimport CirculerLoading from '../components/CirculerLoading';\r\n\r\nimport TagSearchList from \"../components/TagSearchList\";\r\nimport APICallController from '../lib/ConnectionLibrary';\r\n\r\n//テスト表示用\r\n\r\n\r\n//メインページの画面メイン\r\nconst TaggedSearchPage=(props)=>{\r\n\r\n    //const tag_list=useSelector(state=>state.auth_login.all_tag,[]);\r\n    \r\n    useEffect(() => {        \r\n        APICallController.setView(\"tag\");\r\n        \r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"page\" >\r\n            <TagSearchList />\r\n            <CirculerLoading isModal={false} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default  TaggedSearchPage;","//各メモの表示を行う\r\n\r\n\r\n//初期状態メモヘッダーのみ表示\r\n\r\n//ヘッダーから開閉イベントを受けたら詳細をアニメーションで展開する\r\n\r\nimport React ,{useEffect, useState} from 'react';\r\nimport  {useSelector} from 'react-redux'\r\nimport {Collapse,IconButton,Box}  from '@material-ui/core';\r\n\r\nimport ExpandMoreIcon  from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport CheckBoxOutlineBlankTwoToneIcon from '@material-ui/icons/CheckBoxOutlineBlankTwoTone';\r\nimport CheckBoxTwoToneIcon from '@material-ui/icons/CheckBoxTwoTone';\r\n\r\n\r\nimport ReplyTwoToneIcon from '@material-ui/icons/ReplyTwoTone';\r\nimport AddCircleOutlineTwoToneIcon from '@material-ui/icons/AddCircleOutlineTwoTone';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nimport  {getDateMessage,getUserName} from  '../lib/UtilityLibrary';\r\n\r\n//重要\r\nimport StarBorderTwoToneIcon from '@material-ui/icons/StarBorderTwoTone';\r\nimport StarTwoToneIcon from '@material-ui/icons/StarTwoTone';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    memo:{            \r\n        width: '90%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n      \r\n    memoSub:{            \r\n        width: '80%',\r\n        right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n      \r\n    memoChild:{            \r\n        width: '85%',\r\n        right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        borderTop: '2px solid #ccc',\r\n      },\r\n\r\n    memoParent:{            \r\n        width: '85%',\r\n        //right:'20px',\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: theme.spacing(1, 2, 0),\r\n        border: '1px solid #555555',\r\n      },\r\n\r\n      ulbutton:{\r\n        display:\"flex\",\r\n        listStyle:\"none\",\r\n        align:\"flex-end\",  \r\n    },\r\n    menuButton:{\r\n        spacing:'10px',\r\n    },\r\n\r\n\r\n\r\n    icons:{\r\n        justifyContent: \"flex-end\",\r\n        \r\n    },\r\n\r\n    headertext:{\r\n        justifyContent: \"flex-start\",\r\n        \r\n    },\r\n\r\n    libutton:{\r\n        margin:10\r\n    },\r\n\r\n    textarea:{\r\n       // width:\"100%\",\r\n       // height:100\r\n    }\r\n\r\n  }));\r\n\r\n\r\n\r\nconst ReplyColumn=({data,boxstyle,mark})=>{\r\n    const TEXT_LIMIT=40;\r\n    const dd=data;\r\n    //console.log(mark);\r\n    console.log(\"rpc\",dd);\r\n    console.log(\"rpc str\",dd.strMainText);\r\n    \r\n    \r\n    const setHeaderText=(txt)=>{\r\n        //if (typeof txt ===\"undefined\") console.log(\"txt undefined \");\r\n        return txt.substring(0,TEXT_LIMIT)+\"....\";\r\n    };\r\n    const classes=useStyles();\r\n    //const [maintext,setMainText] =useState(setHeaderText(dd.strMainText));\r\n    const [maintext,setMainText] =useState(dd.strMainText);\r\n\r\n    const user_list = useSelector(state => state.auth_login.user_list,[]);\r\n    const tag_list = useSelector(state => state.auth_login.all_tag,[]);\r\n    const hasRead=useSelector(state=>state.memo_main.read);\r\n    const favorite=useSelector(state=>state.memo_main.fav);\r\n\r\n    const [expanded ,setExpanded]=useState(false);\r\n    const [hasStar, setHasStar] = useState(favorite.includes(data.id));\r\n    const [read, setRead] = useState(hasRead.includes(data.id));\r\n    const [bstyle,setBoxStyle]=useState(classes.memo);\r\n\r\n    const checkText=(exp)=>{\r\n        if(exp){\r\n            setMainText(dd.strMainText);\r\n        }else{\r\n            setMainText(setHeaderText(dd.strMainText) );\r\n        }\r\n    }\r\n\r\n    const onExpanded=()=>{\r\n        // if(!expanded){\r\n        //     setMainText(dd.strMainText);\r\n        // }else{\r\n        //     setMainText(setHeaderText(dd.strMainText) );\r\n        // }\r\n        checkText(!expanded);\r\n\r\n        setExpanded(!expanded);\r\n\r\n    };\r\n\r\n    const onStarClick=()=>{\r\n        setHasStar(!hasStar);\r\n        //後はidとstar情報をサーバーに送るアクション\r\n\r\n    };\r\n\r\n    const onReadClick=()=>{\r\n        setRead(!read);\r\n        //後はidとread情報をサーバーに送るアクション\r\n\r\n    };\r\n\r\n    const getNames=(arr)=>{\r\n        const ars=String(arr).split(\",\");\r\n        const names=ars.map((d)=>{\r\n           const tg=user_list.find((el)=>el.id===parseInt(d))\r\n           return tg.strName;\r\n        })\r\n        \r\n        return names.reduce((acc,value)=>acc+\",\"+value)\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        //setMainText(dd.strMainText);\r\n       // setMainText(setHeaderText(dd.strMainText) );\r\n       checkText(expanded);\r\n        switch(boxstyle){\r\n            case \"thread\":\r\n                 setBoxStyle(classes.memoSub);\r\n                break;\r\n            case \"parent\":\r\n\r\n                setBoxStyle(classes.memoParent);\r\n                break;\r\n            \r\n            case \"child\" :\r\n                setBoxStyle(classes.memoChild);\r\n                break;\r\n            default:\r\n                setBoxStyle(classes.memo);\r\n                break;\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Box  className={bstyle}>\r\n                    <div className={classes.ulbutton} >\r\n                        <span className={classes.headertext}>\r\n                        <div> { getDateMessage(data.datePublish) }</div> <div>{getNames(data.keySender)}より </div> \r\n                        </span>\r\n                        <span className={classes.icons}>\r\n                            <IconButton onClick={onStarClick}>\r\n                                {hasStar ? (<CheckBoxTwoToneIcon/>  ):( <CheckBoxOutlineBlankTwoToneIcon/>)}\r\n                            </IconButton>\r\n                            \r\n                        </ span>\r\n                      \r\n                        <span className={classes.icons} >\r\n                            <IconButton onClick={onReadClick} >\r\n                                {read ? ( <StarTwoToneIcon/> ):( <StarBorderTwoToneIcon/> )}\r\n                            </IconButton>\r\n                        \r\n                        </span>\r\n\r\n                        <div className={classes.icons} >\r\n                                <IconButton onClick={onExpanded} >\r\n                                    {expanded ? ( <ExpandLessIcon/> ):( <ExpandMoreIcon/> )}\r\n                                </IconButton>    \r\n                            </div>\r\n                          \r\n    \r\n                    </div>\r\n                          \r\n                    <Collapse in={expanded} collapsedHeight={30}> \r\n                        <div onClick={onExpanded} className={classes.ulbutton}>\r\n                            <div className={classes.textarea}>{maintext}</div>\r\n                            \r\n                        </div>\r\n                        <div className={classes.ulbutton} >\r\n                            <div>\r\n                                <IconButton edge=\"start\" color=\"inherit\"  className={classes.menuButton} ><ReplyTwoToneIcon size=\"small\"/></IconButton>\r\n                                <IconButton edge=\"start\" ize=\"small\" color=\"inherit\"  ><AddCircleOutlineTwoToneIcon size=\"small\"/></IconButton>\r\n                                <IconButton edge=\"start\" size=\"small\" color=\"inherit\"  ><DeleteOutlinedIcon size=\"small\"/></IconButton>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n                    \r\n     \r\n                </Box>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ReplyColumn;","import React, { useState, useLayoutEffect, useRef,useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ReplyColumn from './ReplyColumns';\r\n\r\n/**\r\n * Styled component\r\n */\r\n\r\n\r\nconst useStyles=makeStyles({\r\n\r\n    wrapper:props=>({\r\n        width: \"100%\",\r\n        margin: \"2em auto\",\r\n        position: \"relative\",\r\n        padding: \"0em 1em\",\r\n\r\n        '&:after': {\r\n            content: '',\r\n            display: \"table\",\r\n            clear: \"both\"\r\n        },\r\n    \r\n        '&:before': {\r\n            content: '\"\"',\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: \"10px\",\r\n            height:(props.lineHeight)+\"px\",\r\n            width: \"2px\",\r\n            background: \"black\"\r\n        }\r\n        \r\n    })\r\n});\r\n\r\n\r\nconst  ReplyColumnList=(props)=> {\r\n\tconst [lineHeight, setLineHeight] = useState(0);\r\n    const classes=useStyles({lineHeight});\r\n\tconst wrapperHeight = useRef(null);\r\n    //console.log(\" ReplyColumnList \",props);\r\n    \r\n\tuseLayoutEffect(() => {\r\n\t\tconst handleResize = () => {\r\n\t\t\tsetLineHeight(\r\n\t\t\t\twrapperHeight.current.clientHeight\r\n                // -wrapperHeight.current.lastChild.clientHeight\r\n\t\t\t);\r\n\t\t};\r\n\r\n\t\twindow.addEventListener('resize', handleResize)\r\n\t\thandleResize();\r\n\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', handleResize);\r\n\t\t}\r\n\t}, [props.data, lineHeight]);\r\n\r\n\r\n\treturn (\r\n\t\t<div\r\n            className={classes.wrapper}\r\n\t\t\tref={wrapperHeight}\r\n\t\t\tlineHeight={lineHeight}\r\n\t\t>\r\n            {\r\n                props.data.map((d)=>{\r\n                    return ( <ReplyColumn\r\n                        boxstyle={\"thread\"}\r\n                        key={d.id}\r\n                        data={d}\r\n                        mark={props.mark}\r\n\r\n                    />)\r\n                    \r\n                })\r\n            }\r\n\r\n\r\n\t        \r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ReplyColumnList\r\n","import React, {useEffect} from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport  {getReplyData} from '../actions';\r\nimport ReplyColumnList  from '../components/ReplyColumnList'\r\nimport ReplyColumn from '../components/ReplyColumns';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst ReplyThreadPage=(props)=>{\r\n    const reply_main=useSelector(state=>state.reply_main);\r\n    console.log(\"reply_main\",reply_main);\r\n    const dispatch=useDispatch();\r\n\r\n    const classes=listStyles();\r\n    \r\n    useEffect(() => {\r\n        dispatch(getReplyData(props.match.params.id));\r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"reply_main\",reply_main);\r\n        \r\n    }, [reply_main]);\r\n\r\n    const normalSceane=()=>{\r\n        return (\r\n            <div className={classes.base} >\r\n                \r\n                {reply_main.past_thread.length!==0 ?\r\n                　　<div><div> 過去の履歴 <div/> <ReplyColumnList   data={ reply_main.past_thread } boxstyle={\"thread\"} mark={\"a\"} /></div></div> \r\n                    :\r\n                     <div/> \r\n                }\r\n    \r\n                {Object.keys(reply_main.parent_data).length!==0 ? \r\n                     <div><div> 直近の応答</div><ReplyColumn  data={ reply_main.parent_data } mark={\"b\"}/></div> \r\n                :\r\n                     <div/> \r\n                }\r\n                <div>\r\n                    <ReplyColumn data={reply_main.self_data }  mark={\"e\"} />\r\n                </div>\r\n                {reply_main.child_data.length!==0 ?　　<div><div> 関連する応答 <div/> <ReplyColumnList   data={ reply_main.child_data } boxstyle={\"thread\"} mark={\"c\"}/></div></div> : <div/> }\r\n                {reply_main.future_thread.length!==0 ?　　<div><div> その後の履歴 <div/> <ReplyColumnList   data={ reply_main.future_thread } boxstyle={\"thread\"}  mark={\"d\"} /></div></div> : <div/> }\r\n            \r\n            </div>\r\n    \r\n        )\r\n    }\r\n\r\n    return (\r\n        reply_main.load_flg ? normalSceane() :<LinearProgress/> \r\n\r\n    )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default  ReplyThreadPage;","//各メモの表示を行う\r\n\r\n\r\n//初期状態メモヘッダーのみ表示\r\n\r\n//ヘッダーから開閉イベントを受けたら詳細をアニメーションで展開する\r\n\r\nimport React ,{useState,useEffect} from 'react';\r\n\r\nimport {useSelector} from 'react-redux';\r\nimport {Box}  from '@material-ui/core';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {getUserName,getDateMessage}  from  '../lib/UtilityLibrary';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    memo:{            \r\n        width: '90%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1, 2, 0),\r\n        border: '1px solid #000',\r\n      },\r\n\r\n    mainExp:{\r\n        fontSize:\"12pt\",\r\n        color:\"#555555\"\r\n    },\r\n    \r\n    subExp:{\r\n        fontSize:\"10pt\",\r\n        color:\"#aaa\"\r\n    },\r\n\r\n     \r\n  }));\r\n\r\n\r\n/*\r\n  ・届いた時間\r\n  ・送り元\r\n  ・メッセージ\r\n\r\n*/\r\n\r\n\r\nconst NoticeColumn=({data})=>{\r\n    //console.log(props);\r\n    const TEXT_LIMIT=40;\r\n\r\n    \r\n    const setHeaderText=(txt)=>{\r\n        return txt.substring(0,TEXT_LIMIT)+\"....\";\r\n    };\r\n    \r\n    const userlist = useSelector(state => state.auth_login.user_list);\r\n    const classes=useStyles();\r\n    const [maintext,setMainText] =useState(setHeaderText(data.keyMemoMain.strMainText));\r\n \r\n    const [senderMsg,setSenderMsg]= useState(\"\");\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(\"userlist \",  userlist);\r\n        if (!userlist || userlist.length===0) return;\r\n\r\n        const sender=getUserName(userlist,data.keyMemoMain.keySender);\r\n\r\n        if (data.numNoticeType===1){\r\n            setSenderMsg(sender+\"からメモが来ています。\");\r\n        } else{\r\n            setSenderMsg(sender+\"から返信が来ています。\");\r\n        }\r\n    },[userlist]);\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Box className={classes.memo}>\r\n                    <Link underline=\"none\" to={\"/reply/\" +  data.keyMemoMain.id} replace >\r\n                        <div className={classes.mainExp}>\r\n                        {getDateMessage(data.keyMemoMain.dateRegist) } : {senderMsg}  \r\n                        </div>\r\n                        <div className={classes.subExp}>{maintext} </div>\r\n                    </Link>\r\n                </Box>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default NoticeColumn;","import React ,{useState,useEffect}  from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport NoticeColumn from './NoticeColumn';\r\n//import {LOAD_NEW_MEMO} from '../lib/ActionTypeString';\r\nimport {getNoticeData} from '../actions';\r\nimport {ScrollUpdater} from '../lib/windowScrollControll';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n//このリスト画面自体は通信にはかかわらず、親のコンポーネントからデータを渡す\r\n//このコンポーネント自体はスクロール位置に関係する\r\n\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\nconst NoticeList=(props)=>{\r\n    //const dispatch=useDispatch();\r\n    \r\n    const notices=useSelector(state=>state.notice_main.notices);\r\n    const endflg=useSelector(state=>state.notice_main.endflg);\r\n    const [startnum,setStartNum]=useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        console.log(\" Add Start\");\r\n         dispatch(getNoticeData(startnum));\r\n    },[]);\r\n\r\n\r\n\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        <div className={classes.base}>\r\n            {notices.length>0 ?\r\n\r\n                notices.map((d)=>{\r\n                    return (<NoticeColumn\r\n                        data={d}\r\n                    />)\r\n                })\r\n\r\n            :\r\n            <div>ロード中</div>\r\n            }\r\n            {endflg ?  <div>現在の表示内容は以上です。</div> : <div className={classes.progress}><LinearProgress/></div> }\r\n           \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NoticeList;\r\n","import React from 'react';\r\nimport {useSelector,useDispatch}  from 'react-redux';\r\nimport MainHeader from \"../components/MainHeader\";\r\nimport {  makeStyles } from '@material-ui/core';\r\nimport NoticeList from '../components/NoticeList';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst NoticeListPage=(props)=>{\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        \r\n        <div >\r\n            <NoticeList />\r\n        </div> \r\n\r\n    )\r\n}\r\n\r\nexport default  NoticeListPage;","import React ,{useState,useEffect}  from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport {makeStyles} from '@material-ui/styles';\r\nimport MemoColumn from './MemoColumn';\r\n//import {LOAD_NEW_MEMO} from '../lib/ActionTypeString';\r\nimport {showFavorite} from '../actions';\r\nimport {ScrollUpdater} from '../lib/windowScrollControll';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { Typography } from '@material-ui/core';\r\n//このリスト画面自体は通信にはかかわらず、親のコンポーネントからデータを渡す\r\n//このコンポーネント自体はスクロール位置に関係する\r\n\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\nconst FavoriteList=(props)=>{\r\n    //const dispatch=useDispatch();\r\n    \r\n    \r\n    const timeline=useSelector(state=>state.show_favorite.timeline,[]);\r\n    const read=useSelector(state=>state.show_favorite.read,[]);\r\n    const fav=useSelector(state=>state.show_favorite.fav,[]);\r\n    const endflg=useSelector(state=>state.show_favorite.endflg);\r\n    const [startnum,setStartNum]=useState(0);\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const setNewTimeLine=()=>{\r\n        dispatch(showFavorite());\r\n        //loadNewMemo(startnum);\r\n    };\r\n\r\n\r\n    const classes=listStyles();\r\n\r\n    return (\r\n        <div className={classes.base}>\r\n            <div><Typography variant='h5' gutterBottom >お気に入り一覧</Typography></div>\r\n            <hr/>\r\n            <ScrollUpdater scrollFunc={()=>setNewTimeLine() }  checkParam={timeline} endflg={endflg} buffer={60} />\r\n            {timeline && \r\n                timeline.map((d)=>{\r\n                    return (<MemoColumn\r\n                        key={d.id}\r\n                        data={d}\r\n                        \r\n                        read={read}\r\n                        fav={fav}\r\n                    />)\r\n                })\r\n            }\r\n            {endflg ?  <div><Typography variant='h6' gutterBottom >現在の表示内容は以上です。</Typography></div> : <div className={classes.progress}><LinearProgress/></div> }\r\n           \r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FavoriteList;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {connect,useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport FavoriteList from '../components/FavoriteList';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst FavoriteListPage=(props)=>{\r\n    const classes=listStyles();\r\n    \r\n    return (    \r\n        <div >\r\n            <FavoriteList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  FavoriteListPage;","import react,{useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    NativeSelect,\r\n    FormHelperText,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Tab,\r\n    Tabs,\r\n    TextField\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { TYPE_TAG_GUEST,TYPE_TAG_MENBER} from '../lib/TagTypeNames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {GetTagName} from './parts/ShowInfoSet';\r\nimport {loadUserConfig,changeUserConfig,resetUserConfig} from '../actions';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        top:'200px',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nexport const UserTagConfigColumn=(props)=>{\r\n    //console.log(props);\r\n    //console.log(\" UserTagConfigColumn start \");\r\n    \r\n    const tag_list=useSelector(state=>state.auth_login.tag_list);\r\n    const [status,setStatus]=useState(props.data.numTagStatus);\r\n    const [isShow,setIsShow]=useState(props.data.boolIsShownInList);\r\n\r\n\r\n    const classes=useStyles();\r\n    const dispatch=useDispatch();\r\n\r\n    const onChangeTabSearch=(e,id)=>{\r\n        //変更はSnackBarのみで知らせる\r\n        const stnow=e.target.value;\r\n\r\n        setStatus(stnow);\r\n        dispatch(changeUserConfig(id,stnow,isShow));\r\n\r\n\r\n    };\r\n\r\n    const onChangeListView=(id)=>{\r\n        setIsShow(!isShow);        \r\n        dispatch(changeUserConfig(id,status,!isShow));\r\n\r\n\r\n    };\r\n\r\n    return (\r\n        <div  >\r\n        <span> <GetTagName id={props.data.keyTag}/> </span>\r\n        <span>\r\n            <FormControl className={classes.formControl}>\r\n                <NativeSelect\r\n                value={status}\r\n                onChange={(e)=>onChangeTabSearch(e,props.data.keyTag)}\r\n                name=\"status\"\r\n                className={classes.selectEmpty}\r\n                inputProps={{ 'aria-label': 'age' }}\r\n                >\r\n                    <option　defaultChecked value=\"1\">メインリスト</option>\r\n                    <option value=\"2\">サブリスト</option>\r\n                    <option value=\"-1\">検索のみ</option>\r\n                </NativeSelect>\r\n            </FormControl>\r\n\r\n        </span>\r\n        <span>\r\n          <FormControlLabel\r\n                control={\r\n                <Checkbox\r\n                    checked={isShow}\r\n                    onChange={(e)=>onChangeListView(props.data.keyTag)}\r\n                    //name=\"checkedB\"\r\n                    color=\"primary\"\r\n                />\r\n                }\r\n                label=\"一覧表示\"\r\n            />\r\n          </span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst UserTagConfigList=()=>{\r\n    \r\n\r\n    const uConfigList=useSelector(state=>state.auth_login.user_config,[]);\r\n    \r\n    const dispatch=useDispatch();\r\n    \r\n    const classes=useStyles();\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUserConfig());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        //console.log(\"get config change\");\r\n    }, [uConfigList]);\r\n\r\n    const onResetClick=()=>{\r\n        dispatch(resetUserConfig()); \r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Button \r\n                    variant='contained'\r\n                    color=\"primary\"\r\n                    onClick={onResetClick} \r\n                    >全タグリセット</Button>\r\n            </div>\r\n\r\n        {uConfigList.length>0 &&\r\n            uConfigList.map((d)=>{\r\n                return ( <UserTagConfigColumn\r\n                    data={d}/>\r\n                )\r\n\r\n            })\r\n        }\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default UserTagConfigList;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {connect,useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport UserTagConfigList from '../components/UserTagConfigList';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst UserConfigListPage=(props)=>{\r\n    \r\n    const classes=listStyles();\r\n    \r\n    return (\r\n\r\n        <div className={classes.base} >\r\n            <UserTagConfigList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  UserConfigListPage;","import react,{useState,useEffect,useRef} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {\r\n    Collapse,\r\n    Button,\r\n    FormControl,\r\n    NativeSelect,\r\n    RadioGroup,\r\n    Radio,\r\n    FormControlLabel,\r\n    TextField\r\n    } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { TAG_TYPES,TAG_RANKS} from '../lib/TagTypeNames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {GetTagName} from './parts/ShowInfoSet';\r\nimport { showTagAdmin, makeNewTagByAdmin, modifyTagByAdmin} from '../actions';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n        //display: 'flex',\r\n       // justifyContent: 'center',\r\n        flexWrap: 'wrap',\r\n        top:'200px',\r\n        '& > *': {\r\n          margin: theme.spacing(0.5),\r\n        },\r\n        padding:\"0px 0px 0px\"\r\n      },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  \r\n\r\nconst tagRanks={\r\n    1000:\"最重要\",\r\n    100:\"重要\",\r\n    10:\"通常\",\r\n    1:\"表示用(現在利用せず）\"\r\n};\r\n\r\n\r\n\r\n\r\nexport const UserTagAdminColumn=(props)=>{\r\n    //console.log(props);\r\n    //console.log(\" UserTagConfigColumn start \");\r\n    const [viewmode,setViewMode]=useState(true);\r\n    \r\n    const changFlg=useSelector(state=>state.tag_admin.change,0);\r\n    const [tagName,setTagName]=useState(\"\");\r\n    const [tagRank,setTagRank]=useState(-1);\r\n    const [tagType,setTagType]=useState(-1);\r\n    const [errorMsg,setErrorMsg]=useState(\"\");\r\n\r\n\r\n    const classes=useStyles();\r\n    const dispatch=useDispatch();\r\n\r\n\r\n    const onSelect=()=>{\r\n        props.onSelect(props.data.id);\r\n        \r\n    };\r\n\r\n    const onColumnCancel=()=>{\r\n        //console.log(\"onCancel Done\",props.data.id);\r\n        //setViewMode(true);\r\n        props.onCancel();\r\n    };\r\n\r\n    useEffect(() => {\r\n        //console.log(\"get change!\");\r\n        setTagName(props.data.strTagName);\r\n        setTagRank(props.data.numTagRank);\r\n        setTagType(props.data.numTagType);\r\n\r\n        //console.log((\"---\",TAG_TYPES.find(el=>el.id==props.data.numTagType)));\r\n    }, [props.data]);\r\n\r\n    \r\n    const rank=(tr)=>(TAG_RANKS.find(el=>el.id==tr));\r\n    const type=(tt)=>(TAG_TYPES.find(el=>el.id==tt));\r\n\r\n    const modeView=()=>{\r\n        //console.log(\"type\",type,tagType);\r\n        //if (Object.typeOf(type)=='undefined') console.log(\" undifined error\");\r\n        //const =TAG_TYPES.find(el=>el.id==tagType);\r\n\r\n        \r\n        return (\r\n            <div>\r\n                <span>{props.data.strTagName}</span>\r\n                <span>{rank(tagRank).name}</span>\r\n                <span>{type(tagType).name}</span>\r\n\r\n                <span>\r\n                    <Button onClick={()=>onSelect()}\r\n                        variant='contained'\r\n                        label=\"登録\">編集\r\n                    </Button>\r\n                 </span>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const onSubmit=()=>{\r\n\r\n        if (tagName==\"\"){\r\n            setErrorMsg(\"タグ名がありません\");\r\n            return;\r\n        }\r\n\r\n        if (tagRank==-1 || tagRank==0){\r\n            setErrorMsg(\"タグの重要度が未設定です\"+ String(tagRank));\r\n            return;\r\n        }\r\n\r\n        if (tagType==-1 || tagType==0){\r\n            setErrorMsg(\"タグの種類が未設定です\"+ String(tagType) );\r\n            return;\r\n        }\r\n\r\n        let dispatcher=modifyTagByAdmin;\r\n        if (props.data.id==-1){\r\n            dispatcher=makeNewTagByAdmin;\r\n        }\r\n\r\n        dispatch(dispatcher(\r\n            props.data.id,\r\n            tagName,\r\n            tagRank,\r\n            tagType\r\n        ));\r\n        setErrorMsg(\"\");\r\n    }\r\n\r\n    const modeEdit=()=>{\r\n        return(\r\n            \r\n            <div>\r\n                {errorMsg!=\"\" ?\r\n                    <div>{errorMsg}</div>\r\n                :\r\n                    <div/>\r\n                }\r\n                <div>\r\n                <span>\r\n                    <TextField \r\n                        //label=\"タグ名\"\r\n                        placeholder=\"タグの名称を入力\"\r\n                        onChange={(e)=>setTagName(e.target.value)}\r\n                        defaultValue={tagName}\r\n                        //value={props.data.strTagName}\r\n                        variant=\"outlined\"\r\n                        disabled={false}\r\n                        />\r\n                </span>\r\n                <span>\r\n                    <FormControl className={classes.formControl}>\r\n                        <NativeSelect\r\n                        //value={props.data.numTagRank}\r\n                        defaultValue={tagRank}\r\n                        onChange={(e)=>setTagRank(e.target.value)}\r\n                        name=\"tagrank\"\r\n                        className={classes.selectEmpty}\r\n                        inputProps={{ 'aria-label': 'age' }}\r\n                        >\r\n                            {TAG_RANKS.map((d)=>{\r\n                                    return (<option value={d.id}>{d.name}</option>)\r\n                                })\r\n                            }\r\n                        </NativeSelect>\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <NativeSelect\r\n                        //value={props.data.numTagType}\r\n                        onChange={(e)=>setTagType(e.target.value)}\r\n                        defaultValue={tagType}\r\n                        name=\"status\"\r\n                        className={classes.selectEmpty}\r\n                        inputProps={{ 'aria-label': 'age' }}\r\n                        >\r\n                             {TAG_TYPES.map((d)=>{\r\n                                    return (<option value={d.id}>{d.name}</option>)\r\n                                })\r\n                            }\r\n                            \r\n                        </NativeSelect>\r\n                    </FormControl>\r\n\r\n                </span>\r\n                <span>\r\n                    <Button onClick={onSubmit}\r\n                    variant='contained'\r\n                    label=\"登録\"\r\n                    >登録</Button>\r\n\r\n                </span>\r\n                <span>\r\n                    <Button onClick={onColumnCancel}\r\n                    variant='contained'\r\n                    label=\"キャンセル\"\r\n                    >キャンセル</Button>\r\n                </span>\r\n\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {tagType==-1 ?\r\n            <div/>\r\n        :props.add ?\r\n            modeEdit()\r\n        :props.open ?\r\n            modeEdit()\r\n        :\r\n            modeView()\r\n        }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst UserTagAdminList=()=>{\r\n    //const [funcCancel,setFuncCancel]=useState(null)\r\n    \r\n    const classes=useStyles();\r\n    const tag_list=useSelector(state=>state.tag_admin.tag_list,[]);\r\n    const changFlg=useSelector(state=>state.tag_admin.change,0);\r\n    const [openid,setOpenId]=useState(-1);\r\n    const [add,setAdd]=useState(false);\r\n\r\n    const changeViewList=(id=4)=>{\r\n        return tag_list.filter(data=>data.numTagType==id)\r\n    };\r\n    const [viewtype,setViewType]=useState(4)\r\n\r\n    const [showArray,setShowArray]=useState(changeViewList());\r\n\r\n\r\n    //const uConfigList=useSelector(state=>state.admin.tag_list,[]);\r\n    \r\n    const dispatch=useDispatch();\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(showTagAdmin());\r\n        setOpenId(-1);\r\n    }, [changFlg]);\r\n\r\n    const onColumnSelect=(id)=>{\r\n        setAdd(false)\r\n        setOpenId(id);\r\n    };\r\n\r\n    const onCancel=()=>{\r\n        setOpenId(-1);\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log(showArray);\r\n        setShowArray(changeViewList(viewtype));\r\n        setAdd(false);\r\n        \r\n    }, [viewtype,tag_list]);\r\n\r\n    const onAddClick=()=>{\r\n        setAdd(true);\r\n        setOpenId(-1);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <div>\r\n                <Button\r\n                    label=\"タグ追加\"\r\n                    onClick={()=>onAddClick()}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={add}\r\n                >タグ追加</Button>\r\n            </div>\r\n            <div>\r\n                <FormControl component=\"fieldset\">\r\n                <RadioGroup\r\n                    row\r\n                    defaultValue={viewtype}\r\n                    >\r\n                    {TAG_TYPES.map((d)=>{\r\n                        return (<FormControlLabel \r\n                            value={d.id}\r\n                            checked={d.id==viewtype}\r\n                            onChange={()=>setViewType(d.id)} \r\n                            control={<Radio />} \r\n                            label={d.name} \r\n                            />)\r\n                        })\r\n                    }                    \r\n                </RadioGroup>\r\n                </FormControl>\r\n            </div>\r\n            <hr/>\r\n            { add ?\r\n                <UserTagAdminColumn add={true} open={true} onCancel={()=>setAdd(false)} onSelect={onColumnSelect}  \r\n                data={{ id:-1,strTagName:\"\",numTagRank:0,numTagType:viewtype }}/>\r\n                :\r\n                <div/>\r\n            }\r\n        \r\n            {\r\n            showArray.map((d)=>{\r\n                return (\r\n                <UserTagAdminColumn add={false} open={d.id==openid} onCancel={onCancel} onSelect={onColumnSelect}  data={d}/>\r\n            )\r\n        })\r\n\r\n            }\r\n \r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default UserTagAdminList;\r\n","import React, {useState,useEffect} from 'react';\r\nimport {connect,useSelector,useDispatch}  from 'react-redux';\r\nimport { LinearProgress, makeStyles } from '@material-ui/core';\r\nimport UserTagAdminList from '../components/UserTagAdminList';\r\nimport { auth_login_success } from '../actions';\r\n\r\n//テスト表示用\r\n\r\n\r\nconst listStyles=makeStyles((theme)=>({\r\n    base: {\r\n        position:'relative',\r\n        top:'60px'\r\n    },\r\n\r\n    progress:{\r\n        width: '80%',\r\n        margin: '2px',\r\n    }\r\n\r\n}));\r\n\r\n//メインページの画面メイン\r\nconst TagAdminListPage=(props)=>{\r\n    const dispatch=useDispatch();\r\n    const changFlg=useSelector(state=>state.tag_admin.change,0);\r\n    \r\n    const classes=listStyles();\r\n    //タグ設定を更新したら初期設定内の更新も行ってしまう\r\n    useEffect(() => {\r\n        dispatch(auth_login_success());\r\n    }, [changFlg]);\r\n\r\n    \r\n    return (\r\n\r\n        <div className={classes.base} >\r\n            <UserTagAdminList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  TagAdminListPage;","import React,{useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router';\r\nimport {Route,useLocation,Switch,withRouter} from 'react-router-dom';\r\nimport SlideRoutes from 'react-slide-routes';\r\nimport TestMain  from './pages/TestMain';\r\nimport MainListPage from './pages/MainListPage';\r\nimport TaggedSearchPage from './pages/TaggedSearchPage';\r\nimport  ReplyThreadPage  from './pages/ReplyThreadPage';\r\nimport NoticeListPage from './pages/NoticeListPage';\r\nimport FavoriteListPage from './pages/FavoriteListPage';\r\nimport UserConfigListPage from './pages/UserConfigListPage';\r\nimport TagAdminListPage from './pages/TagAdminListPage';\r\nimport {CSSTransition}  from 'react-transition-group';\r\nimport {TransitionGroup} from 'react-transition-group';\r\nimport './pageSlider.scss';\r\n\r\n\r\nconst PageRouter=(props)=>{\r\n\r\n    const location=useLocation();\r\n\r\n    const getPathDepth=(location)=> {\r\n      let pathArr = location.pathname.split(\"/\");\r\n      pathArr = pathArr.filter(n => n !== \"\");\r\n      return pathArr.length;\r\n    };\r\n\r\n    const [prevDepth,setPrevDepth]=useState(getPathDepth(location));\r\n\r\n    useEffect(() => {\r\n      setPrevDepth(getPathDepth(location));\r\n      console.log(\"depth\", getPathDepth(location));\r\n    },[location]);\r\n\r\n    const currentKey = location.pathname.split(\"/\")[1] || \"/\";\r\n    const timeout = { enter: 800, exit: 400 };\r\n\r\n    \r\n    \r\n    return (\r\n      <div>\r\n          <TransitionGroup component=\"div\" className=\"App\">\r\n          <CSSTransition\r\n          key={currentKey}\r\n          timeout={timeout}\r\n          classNames=\"pageSlider\"\r\n          mountOnEnter={true}\r\n          unmountOnExit={true}\r\n        >\r\n\r\n        <div  className={ getPathDepth(location) - prevDepth >= 0    ? \"left\" : \"right\" }>\r\n          \r\n                <Route exact path='/main' exact  component={MainListPage} />\r\n                <Route  path='/tag' exact component={TaggedSearchPage} />\r\n                <Route  path='/test'  exact > <TestMain/> </Route>\r\n                <Route  path='/notice' exact component={NoticeListPage} />\r\n                <Route  path='/favorite' exact component={FavoriteListPage} />\r\n                <Route  path='/tagconfig' exact component={UserConfigListPage} />\r\n                <Route  path='/tagadmin' exact component={TagAdminListPage} />\r\n                <Route  path='/reply/:id' exact  component={ReplyThreadPage}  />\r\n              </div>\r\n              </CSSTransition>\r\n          </TransitionGroup>\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default  withRouter(PageRouter);","import React, {useState,useEffect} from 'react';\r\nimport {useDispatch,useSelector}  from 'react-redux';\r\nimport MainHeader from \"./components/MainHeader\";\r\nimport MemoInsertButton from \"./components/MemoInsertButton\";\r\nimport FreeTagInputModal from './components/FreeTagInputModal';\r\nimport  FormedTagPutModal from './components/FormedTagPutModal';\r\nimport  SideMenu from './components/SideMenu';\r\nimport  SideDrawer from './components/SideDrawer';\r\nimport FeedbackSnackBar from './components/FeedbackSnackBar';\r\nimport {FREE_MODAL_OPEN,FORMED_MODAL_OPEN} from './lib/ActionTypeString';\r\nimport PageRouter from './routers';\r\n\r\nimport  {auth_login_success} from './actions';\r\nimport APICallController from './lib/ConnectionLibrary';\r\nimport { checkHasContent } from './lib/UtilityLibrary';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useWindowDimensions } from './lib/useWindowDimensions';\r\n\r\nconst Styles=makeStyles({\r\n    \r\n    side: {\r\n        position:\"fixed\",\r\n        marginTop:'28px',\r\n       width:'200px',\r\n       //top:'120px',\r\n       //zIndex:10,\r\n     } ,\r\n     \r\n    contentMobile: {\r\n        //left:\"150px\",\r\n        marginTop:\"50px\",\r\n       //maxWidth:\"800px\",\r\n       //marginLeft:\"10px\"\r\n     },\r\n     \r\n     \r\n    contentDesktop: {\r\n        left:\"200px\",\r\n        marginTop:\"50px\",\r\n       //maxWidth:\"800px\",\r\n       marginLeft:\"210px\"\r\n     },\r\n\r\n     article :{\r\n        display:\"flex\",\r\n       \r\n    }\r\n     \r\n});\r\n\r\n\r\n//メインページの画面メイン\r\nconst PageBase=(props)=>{\r\n\r\n    const dispatch=useDispatch();\r\n    const  error=useSelector(state=>state.error_control.errorFlg) ;\r\n    const [menuOpen,setMenuOpen]=useState(false);\r\n    const [freetagOpen,setFreeTagOpen]=useState(false);\r\n    const [formtagOpen,setformTagOpen]=useState(false);\r\n    const [followOpen,setFollowOpen]=useState(false);\r\n    const reply_source=useSelector(state=>state.reply_main.reply_source);\r\n    const follow_data = useSelector(state => state.follow_main.follow_data,{});\r\n    const tag_list=useSelector(state=>state.auth_login.tag_list,[]);\r\n\r\n    const classes=Styles();\r\n\r\n    const onMenuOpen=()=>{\r\n        setMenuOpen(true);\r\n    };\r\n\r\n    const onMenuClose=()=>{\r\n        setMenuOpen(false);\r\n    };\r\n\r\n\r\n\r\n    const closeModal=()=>{\r\n        setformTagOpen(false);\r\n        setFreeTagOpen(false);\r\n        setFollowOpen(false);\r\n\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        //認証までの実装　実際はログイン終了時のアクションで以下を行う\r\n        if ( tag_list && tag_list.length>0) return;\r\n\r\n        if(error) return;\r\n\r\n        dispatch(auth_login_success());\r\n    }, []);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(checkHasContent(follow_data)|| checkHasContent(reply_source) ){\r\n            //console.log(\"転送データを受け取った！\",follow_data);\r\n            //setFollowOpen(true);\r\n            setFreeTagOpen(true);\r\n        }\r\n\r\n    },[follow_data,reply_source]);\r\n\r\n    const onModalOpen=(action)=>{\r\n        switch (action) {\r\n            case FREE_MODAL_OPEN:\r\n                setFreeTagOpen(true);\r\n                break;\r\n        \r\n            case FORMED_MODAL_OPEN:\r\n                setformTagOpen(true);\r\n                break;\r\n            \r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const {width,height}=useWindowDimensions();\r\n    const isMobile=width<500;\r\n\r\n    const SideSet=()=>{\r\n        if(isMobile){\r\n            console.log(\"mobileset true\");\r\n            return(\r\n                <div ><SideDrawer mobile={true}  open={false}  onClose={onMenuClose}/></div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className={classes.side} ><SideDrawer mobile={false}  open={true} /></div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {error ?\r\n            <div/>\r\n            :   \r\n            <div>\r\n                <MainHeader mobile={isMobile}  openMenu={onMenuOpen} />\r\n                {isMobile ?\r\n                    <SideDrawer mobile={isMobile}  open={menuOpen} onClose={ onMenuClose } />\r\n                :\r\n                    <div className={classes.side} >\r\n                        <SideMenu/>\r\n                    </div>\r\n\r\n                }\r\n\r\n                <div className={isMobile ? classes.contentMobile : classes.contentDesktop  }>\r\n                    <PageRouter/>\r\n                </div>\r\n                <FeedbackSnackBar/>\r\n                <MemoInsertButton  onModalOpen={onModalOpen} />\r\n                <FormedTagPutModal open={formtagOpen} onClose={()=>closeModal()} />\r\n                <FreeTagInputModal open={freetagOpen} onClose={()=>closeModal()}  follow_data={follow_data} reply_source={reply_source} />\r\n                \r\n            </div>\r\n        }\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default  PageBase;","import {useHistory} from 'react-router-dom';\r\nimport {LoginButton} from '../components/parts/AuthButtons';\r\nimport CirculerLoading from '../components/CirculerLoading';\r\nimport {Card,CardContent,CardMedia,CardActions} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst styles=makeStyles((theme)=>({\r\n   loginroot:{\r\n\r\n      justifyContent:\"center\",\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      width: 400,\r\n      margin: `${theme.spacing(0)} auto` \r\n   },\r\n\r\n   card: {\r\n      //:\"50%\",\r\n      justifyContent:\"center\",\r\n      marginTop: theme.spacing(20),\r\n      width:'70%',\r\n      maxWidth:\"300px\"\r\n\r\n   },\r\n   \r\n   button:{\r\n      display:\"block\",\r\n      marginRight:\"auto\",\r\n      marginLeft:\"auto\"\r\n   }\r\n\r\n}));\r\n\r\nconst SingleButtonPage = ({Content,ButtonAction,Footer}) => {\r\n   const history=useHistory();\r\n   const classes=styles();\r\n   \r\n   return (\r\n\r\n      <div className={classes.loginroot}>\r\n         <Card className={classes.card}>\r\n            <CardContent>\r\n               {Content}\r\n            </CardContent>\r\n            <CardActions>        \r\n               <div  className={classes.button}>{ButtonAction}</div>\r\n            </CardActions>\r\n         </Card>\r\n         {Footer} \r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SingleButtonPage;","import {useHistory} from 'react-router-dom';\r\nimport {LoginButton} from '../components/parts/AuthButtons';\r\nimport CirculerLoading from '../components/CirculerLoading';\r\nimport {Card,CardContent,CardMedia,CardActions} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport SingleButtonPage from './SingleButtonPage';\r\n\r\nconst styles=makeStyles((theme)=>({\r\n   loginroot:{\r\n\r\n      justifyContent:\"center\",\r\n      display: \"flex\",\r\n      flexWrap: \"wrap\",\r\n      width: 400,\r\n      margin: `${theme.spacing(0)} auto` \r\n   },\r\n\r\n   card: {\r\n      //:\"50%\",\r\n      justifyContent:\"center\",\r\n      marginTop: theme.spacing(20),\r\n      width:'70%',\r\n      maxWidth:\"300px\"\r\n\r\n   },\r\n   \r\n   button:{\r\n      display:\"block\",\r\n      marginRight:\"auto\",\r\n      marginLeft:\"auto\"\r\n   }\r\n\r\n}));\r\n\r\nconst LoginPage = () => {\r\n   const history=useHistory();\r\n   const classes=styles();\r\n   const CardContent=(\r\n      <CardMedia  height={\"50%\"} component=\"img\" image={`${process.env.PUBLIC_URL}/tagleadlogo.png`} />\r\n   );\r\n\r\n   const CardAction=(\r\n      <LoginButton  redi={false}　callback={()=>history.push(\"/\")}/>\r\n   );\r\n    const Footer=(\r\n      <CirculerLoading isModal={true} />\r\n    )\r\n\r\n   return (\r\n         <SingleButtonPage \r\n            Content={CardContent}\r\n            ButtonAction={CardAction}\r\n            Footer={Footer}\r\n         />\r\n   );\r\n};\r\n\r\nexport default LoginPage;","import { Button } from '@material-ui/core';\r\nimport React ,{ useState,useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { LogOutButton } from '../components/parts/AuthButtons';\r\nimport {Card} from \"@material-ui/core\";\r\nimport SingleButtonPage from './SingleButtonPage';\r\n\r\nconst ErrorPage=(props)=>{\r\n\r\n    const error=useSelector(state=>state.error_control);\r\n    const [errorCode,setErrorCode] =useState(\"\");\r\n    const [errorMsg,setErrorMsg] =useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setErrorCode(error.errorCode);\r\n        setErrorMsg(error.errorMsg);\r\n        \r\n    }, [error]);\r\n\r\n    const Content=()=>{\r\n        return(\r\n            <div>\r\n                <div> エラーが発生しました。　一度ログアウトしてください。</div>\r\n                <div>状況： {errorMsg}</div>\r\n                <div>コード:　{errorCode}</div>\r\n            </div>\r\n    )};\r\n    \r\n    return (\r\n        <SingleButtonPage\r\n            Content={Content()}\r\n            ButtonAction={<LogOutButton/>}\r\n            Footer={<div/>}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default  ErrorPage;\r\n","import { Button } from '@material-ui/core';\r\nimport React  from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SingleButtonPage from './SingleButtonPage';\r\n\r\n\r\nconst LogoutPage=(props)=>{\r\n    const history=useHistory();\r\n    // const classes=styles();\r\n\r\n    const onPress=()=>{\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <SingleButtonPage \r\n            Content={ <div>ログアウトが完了しました。</div> }\r\n            ButtonAction={<Button color=\"secondary\" onClick={onPress} variant='outlined'>最初の画面へ</Button>}\r\n            Footer={<div/>}\r\n        />\r\n    );\r\n}\r\n\r\nexport default  LogoutPage;\r\n","import React,{useEffect} from 'react';\nimport PageBase from './PageBase';\nimport { useSelector } from 'react-redux';\n\nimport {Route,useHistory} from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport ErrorPage from './pages/ErrorPage';\nimport LogoutPage from './pages/LogoutPage';\nimport { Switch, useLocation } from 'react-router';\nfunction App() {\n  //const datas=datasend;\n  const location=useLocation();\n  const history= useHistory();\n  \n  const error=useSelector(state=>state.error_control);\n  useEffect(() => {\n    if (error.errorFlg){\n      history.push(\"/error\");\n    }\n  }, [error,location]);\n\n  return (\n\n    <div className=\"App\">\n      <Switch>\n        <Route  path='/' exact component={LoginPage} />\n        \n        <Route  path='/logout' exact component={LogoutPage} />\n        <Route  path='/error' exact component={ErrorPage} />\n        \n        { location.pathname!=\"/\" &&\n        <Route component={PageBase} />\n        }\n        </Switch>      \n\n    </div>\n  );\n}\n\n\nexport default App;\n","import {combineReducers} from 'redux';\r\n//import {reducer as formReducer} from 'redux-form';\r\nimport  {PUSH_SHOW_MEMO_BUTTON,\r\n        CLOSE_MEMOMAKE,\r\n        LOAD_NEW_MEMO,\r\n        RESET_MEMO,\r\n        MEMO_END,\r\n        MEMO_EDIT_END_MAIN,\r\n        MEMO_EDIT_END_TAG,\r\n        AUTH_SUCCESS,\r\n        MEMO_INSERT_END,\r\n        RESET_TAG,\r\n        TAGGED_SEARCH,\r\n        LOADING_START,\r\n        LOADING_END,\r\n        TAGGED_SEARCH_CONTINUE,\r\n        SHOW_REPLY,\r\n        GET_NOTICE_LIST,\r\n        MAKE_NEWFOLLOW_MODAL,\r\n        DELETE_NEWFOLLOW_MODAL,\r\n        MAKE_NEW_REPLY_MODAL,\r\n        DELETE_NEW_REPLY_MODAL,\r\n        SHOW_SNACK,\r\n        SHOW_FAVORITE,\r\n        USER_CONFIG_LIST,\r\n        CHANGE_USER_CONFIG,\r\n        ERROR_RESET,\r\n        RESULT_ERROR,\r\n        CONNECT_ERROR,\r\n        CRITICAL_ERROR,\r\n        SHOW_TAG_ADMIN,\r\n        MAKE_TAG_ADMIN,\r\n        MODIFY_TAG_ADMIN\r\n    } from '../lib/ActionTypeString';\r\n\r\nimport  {useSnackbar} from 'notistack';\r\n\r\nconst INIT_ACTION={\r\n    type:\"NONE\",\r\n    user_list:[],\r\n    unit_list:[],\r\n    timeline:[],\r\n    isPrivate:false,\r\n    login_id:\"\",\r\n    results:[],\r\n    endflg:false,\r\n    notices:[]\r\n};\r\n\r\n//最初の認証時に取得する情報　各種各ユーザー情報など\r\nconst INIT_AUTH_STATE={\r\n    isLoad:false,\r\n    user_list:[],\r\n    main_tag:[],\r\n    sub_tag:[],\r\n    all_tag:[],\r\n    formatted:[],\r\n    user_config:[]\r\n\r\n};\r\n\r\nconst auth_login=(state=INIT_AUTH_STATE,action=INIT_ACTION)=>{\r\n    \r\n    const result=action.result;\r\n    \r\n    switch (action.type) {\r\n        case LOADING_START:\r\n            return {\r\n                ...state,\r\n                isLoad:true\r\n            };\r\n        case LOADING_END:\r\n            return {\r\n                ...state,\r\n                isLoad:false\r\n            };\r\n\r\n        case AUTH_SUCCESS:\r\n            //console.log(action);\r\n            const userConf=result.res;\r\n            \r\n            return  { ...state,\r\n                userId:userConf.userId,\r\n                userRank:userConf.userRank,\r\n                user_list:userConf.user_list,\r\n                main_tag:userConf.main,\r\n                sub_tag:userConf.sub,\r\n                all_tag:userConf.all,\r\n                formatted:userConf.formatted\r\n                //unit_list:result.unit_list\r\n                //tag_list:action.tag_list\r\n            };\r\n\r\n    \r\n        case USER_CONFIG_LIST:\r\n        \r\n            return  { ...state,\r\n                user_config:result.user_config,\r\n            };\r\n        case CHANGE_USER_CONFIG:\r\n            //こまめに値を返さないと表示がずれるので現状を返す\r\n            return  { ...state,\r\n                main_tag:result.main_tag,\r\n                sub_tag:result.sub_tag,\r\n                user_config:result.user_config,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst INIT_TAG_ADMIN_STATE={\r\n    tag_list:[],\r\n    change:0\r\n};\r\n\r\nconst tag_admin=(state=INIT_TAG_ADMIN_STATE,action=INIT_ACTION)=>{\r\n    switch(action.type){\r\n        case SHOW_TAG_ADMIN:\r\n            console.log(\"SHOW_TAG_ADMIN DONE\");\r\n            return {...state,\r\n                tag_list:action.result.tag_list\r\n            }; \r\n\r\n        case MAKE_TAG_ADMIN:\r\n        case MODIFY_TAG_ADMIN:\r\n            return {\r\n                ...state,\r\n                change:action.result.change\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst INIT_USER_TAG={\r\n    user_config:[]\r\n\r\n}\r\n\r\n\r\n\r\n//各ユーザーのログイン時のやり取り\r\nconst INIT_USER_STATE={\r\n    login_id:-1,\r\n    open_password:false,\r\n};\r\n\r\nconst INIT_MEMO_MAIN_STATE={\r\n    timeline:[],\r\n    read:[],\r\n    fav:[],\r\n    memomake_open:false,\r\n    endflg:false,\r\n    change:0\r\n};\r\n\r\nconst INIT_MEMO_STATE=\"\";\r\n\r\nconst memo_main=(state=INIT_MEMO_MAIN_STATE,action=INIT_ACTION)=>{\r\n    \r\n    const result=action.result;\r\n\r\n    switch(action.type){\r\n        case RESET_MEMO:\r\n            return {...state,\r\n                timeline:result.timeline,\r\n                read:result.read,\r\n                fav:result.fav,\r\n                endflg:result.endFlg\r\n            }; \r\n            \r\n        case LOAD_NEW_MEMO:\r\n            //console.log(action);\r\n            const resA=state.timeline.concat().concat(result.timeline);\r\n            const read=state.read.concat().concat(result.read);\r\n            const fav=state.fav.concat().concat(result.fav);\r\n\r\n            //resA.concat(action.timeline);\r\n           // console.log(resA);\r\n\r\n        \r\n            return {...state,\r\n                timeline:resA,\r\n                read:read,\r\n                fav:fav,\r\n                //results:action.results,\r\n                endflg:result.endflg\r\n            }; \r\n\r\n        case MEMO_EDIT_END_MAIN:\r\n            \r\n            console.log(\"result:\",result);\r\n            const newtimeline=state.timeline.map((d)=> d.id===result.id ? result : d );\r\n            return {\r\n                ...state,\r\n                timeline:newtimeline\r\n            };\r\n            \r\n        case PUSH_SHOW_MEMO_BUTTON:\r\n            //console.log(state);\r\n\r\n            return Object.assign({},state,{\r\n                isPrivate:action.isPrivate,\r\n                memomake_open:action.memomake_open}\r\n            );\r\n\r\n\r\n        case CLOSE_MEMOMAKE:\r\n            return Object.assign({},state,{ memomake_open:false}\r\n            );\r\n\r\n        case MEMO_END:\r\n            return {...state,\r\n                timeline:[],\r\n                read:[],\r\n                fav:[],\r\n                //results:action.results,\r\n                endflg:false\r\n            };\r\n\r\n            case MEMO_INSERT_END:\r\n                return {...state,\r\n                    change:result.change\r\n                };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const tagged_main=(state=INIT_TAGGED_SEARCH,action=INIT_ACTION)=>{\r\n    \r\n    const result=action.result;\r\n\r\n    switch(action.type){\r\n\r\n\r\n\r\n        case TAGGED_SEARCH:\r\n            return {...state,\r\n                timeline:result.timeline,\r\n                read:result.read,\r\n                fav:result.fav,\r\n                endflg:result.endflg\r\n            };     \r\n        \r\n        case TAGGED_SEARCH_CONTINUE:\r\n            if( result.timeline.length==0){\r\n                console.log(\" has no next \");\r\n                return {...state,\r\n                    endflg:result.endflg\r\n                }; \r\n    \r\n            }\r\n\r\n            return {...state,\r\n                timeline:state.timeline.concat().concat(result.timeline),\r\n                read:state.read.concat().concat(result.read),\r\n                fav:state.fav.concat().concat(result.fav),\r\n                //results:action.results,\r\n                endflg:result.endflg\r\n            }; \r\n\r\n        case MEMO_EDIT_END_TAG:\r\n            console.log(\"result:\",result);\r\n            const newtimeline=state.timeline.map((d)=> d.id===result.id ? result : d );\r\n            return {\r\n                ...state,\r\n                timeline:newtimeline\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nconst show_favorite=(state=INIT_MEMO_STATE,action)=>{\r\n    switch(action.type){\r\n        case SHOW_FAVORITE:\r\n            return {...state,\r\n                timeline:action.result.timeline,\r\n                read:action.result.read,\r\n                fav:action.result.fav,\r\n                endflg:action.result.endFlg\r\n            }; \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nconst INIT_TAGGED_SEARCH={\r\n    timeline:[],\r\n    read:[],\r\n    fav:[],\r\n    endflg:false,\r\n    change:0\r\n};\r\n\r\nconst INIT_REPLY_MAIN={\r\n    self_data:{},\r\n    reply_source:{},\r\n    parent_data:null,\r\n    past_thread:[],\r\n    child_data:[],\r\n    future_thread:[],\r\n    load_flg:false\r\n};\r\n\r\n\r\nconst INIT_FOLLOW_ACTION={\r\n    follow_data:{},\r\n\r\n};\r\n\r\n\r\nexport const follow_main=(state=INIT_FOLLOW_ACTION,action)=>{\r\n    switch (action.type){\r\n\r\n        case MAKE_NEWFOLLOW_MODAL:\r\n            return {\r\n                ...state,\r\n                follow_data:action.follow_data,\r\n            };\r\n        case DELETE_NEWFOLLOW_MODAL:\r\n            return {\r\n                ...state,\r\n                follow_data:{},\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const reply_main=(state=INIT_REPLY_MAIN,action)=>{\r\n    switch(action.type){\r\n\r\n        case MAKE_NEW_REPLY_MODAL:\r\n            return {\r\n                ...state,\r\n                reply_source:action.reply_source\r\n            };\r\n        case DELETE_NEW_REPLY_MODAL:\r\n            return {\r\n                ...state,\r\n                reply_source:{}\r\n            };\r\n\r\n\r\n        case SHOW_REPLY:\r\n            \r\n            const result=action.result;\r\n            console.log(\" reply source \",result);\r\n\r\n            const past_thread=[];\r\n            const child_data=[];\r\n            const future_thread=[];\r\n            let parent_data={};\r\n            console.log(\" reply timeline \",result.timeline);\r\n\r\n            const self_data=result.timeline.find((d) => d.id===parseInt(result.id));\r\n                \r\n            result.timeline.map((d)=>{\r\n                if(d.id<self_data.id){\r\n                    if(self_data.keyParent===d.id){\r\n                        parent_data=d;\r\n                    }else{\r\n                        past_thread.push(d);\r\n                    }\r\n                }else if( d.id > self_data.id ){\r\n                    if(d.keyParent===self_data.id){\r\n                        child_data.push(d);\r\n                    }else{\r\n                        future_thread.push(d);\r\n                    }\r\n                }\r\n            });\r\n            \r\n\r\n            return {...state,\r\n                self_data:self_data,\r\n                parent_data:parent_data,\r\n                past_thread:past_thread,\r\n                child_data:child_data,\r\n                future_thread:future_thread,\r\n                endFlg:true,\r\n                load_flg:true\r\n                \r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst INIT_NOTICE={\r\n    notices:[],\r\n    snack:[],\r\n    count:0\r\n};\r\n\r\nexport const notice_main=(state=INIT_NOTICE,action=INIT_ACTION)=>{\r\n    switch (action.type){\r\n        case GET_NOTICE_LIST:\r\n            return {\r\n                ...state,\r\n                notices:action.result.notices,\r\n                count:action.result.count     \r\n            };\r\n        case SHOW_SNACK:\r\n\r\n            return {\r\n                ...state,\r\n                snack:[...state.snack,action.msg]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nconst ERROR_DATA={\r\n    errorFlg:false,\r\n    errorMsg:\"\",\r\n    errorCode:-1\r\n    \r\n};\r\nconst error_control=(state= ERROR_DATA,action=INIT_ACTION) =>{\r\n\r\n    const results=action.result;\r\n    switch (action.type){\r\n        case ERROR_RESET:\r\n            return ERROR_DATA;\r\n\r\n        case RESULT_ERROR:\r\n            return {\r\n                ...state,\r\n                errorFlg:true,\r\n                errorMsg: results.errorMsg,\r\n                errorCode:results.errorCode,\r\n            };\r\n        case CRITICAL_ERROR:\r\n            return {\r\n                ...state,\r\n                errorFlg:true,\r\n                errorMsg: action.result.errorMsg\r\n            };\r\n\r\n        case CONNECT_ERROR:\r\n            return {\r\n                ...state,\r\n                errorFlg:true,\r\n                errorMsg: \"通信エラーが発生再接続します\"\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default combineReducers(\r\n    {memo_main,\r\n    auth_login,\r\n    tagged_main,\r\n    reply_main,\r\n    notice_main,\r\n    follow_main,\r\n    show_favorite,\r\n    error_control,\r\n    tag_admin\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootReducer from '../reducers';\r\n\r\nfunction configureStore(initialState) {\r\n\r\n    let createStoreWithMiddleware;\r\n\r\n    const logger = createLogger({\r\n        collapsed:true,\r\n        diff:true\r\n    }\r\n    );\r\n    const middleware = applyMiddleware(thunk, logger);\r\n\r\n    createStoreWithMiddleware = compose(\r\n        middleware\r\n    );\r\n\r\n    return createStoreWithMiddleware(createStore)(rootReducer, initialState);\r\n}\r\n\r\nlet store = configureStore();\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport PageRouter from './routers';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport {SnackbarProvider} from 'notistack';\n\n ReactDOM.render(\n   \n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n      <Router>\n      <App />\n      {/* <PageRouter/> */}\n      </Router>\n      </SnackbarProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}